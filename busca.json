[{"title":"Instalando o Docker no CentOS 8","url":"/blog/2020/11/27/instalando-o-docker-no-centos-8/","content":"\nO **Docker CE** atualmente não é suportado pelo **Red Hat Enterprise Linux (RHEL) 8** e **CentOS 8**.\n\nA maneira oficialmente recomendada pela **Red Hat** para gerenciar contêineres, é através do **Podman**, que é basicamente um substituto para o Docker nestas distribuições do Linux.\n\nSe você desejar maiores informações sobre o por que desta *falta de suporte* ao Docker, você pode consultar a seção [\"1.1. Running containers without Docker\"](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/building_running_and_managing_containers/index) da documentação.\n\n# Instalação do Docker\n\nPara que se possa iniciar a instalação do Docker, primeiramente, atualize os pacotes:\n\n\t$ sudo yum update -y\n\n## Adicionar o repositório do Docker\n\nPara que seja possível instalar o Docker, se faz necessário adicionar o repositório do mesmo ao YUM.\n\n\t$ sudo yum install -y yum-utils\n\t$ sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\n\n## Remover pacotes que conflitam com o Docker\n\nUma vez que o **Podman** é o \"substituto\" para o Docker no RHEL/CentOS 8, será necessário remove-los antes de prosseguir com a instalação do Docker:\n\n\t$ yum erase podman buildah -y\n\n## Instalar o Docker\n\nAgora, efetivamente partindo para a instalação do Docker:\n\n\t$ sudo yum install docker-ce docker-ce-cli containerd.io -y\n\nAo final da instalação, você pode adicionar o seu o usuário atual ao grupo do Docker:\n\n\t$ sudo usermod -a -G docker ${USER}\n\n## Habilitar e iniciar o serviço do Docker\n\nPara que o Docker esteja sempre disponível e rodando, habilite e rode o serviço, respectivamente:\n\n\t$ sudo systemctl enable docker\n\t$ sudo systemctl start docker\n\n# Verificar a instalação e status do Docker\n\nPara que você possa verificar o status de execução do Docker, você pode, por exemplo, executar os comandos:\n\n\t$ docker info\n\t$ systemctl status docker\n\n### Rodando uma imagem de testes\n\nJá, para verificar o sucesso da instalação, você executar a imagem **hello-world**.\nPara isto, basta executar:\n\n\t$ sudo docker run hello-world\n\n\n","tags":["centos","terminal","docker"],"categories":["blog"]},{"title":"Usando Alexa como Autofalante do MacBook","url":"/blog/2020/10/30/usando-alexa-echo-dot-como-autofalante-do-macos/","content":"\nAlém da infinidade de possibilidades que a **Alexa** proporciona no dia a dia, é possível utilizá-la também, como uma \"simples caixinha de som\". Seja através da conexão de um cabo de som auxiliar, que pode ser encontrado normalmente ao lado da entrada de energia, ou então, via bluetooth.\n\n\n| Echo Dot  | Echo Dot com Relógio  | Echo Show  |\n| --------- |:---------------------:| ----------:|\n| <iframe sandbox=\"allow-popups allow-scripts allow-modals allow-forms allow-same-origin\" style=\"width:120px;height:240px;\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" frameborder=\"0\" src=\"//ws-na.amazon-adsystem.com/widgets/q?ServiceVersion=20070822&OneJS=1&Operation=GetAdHtml&MarketPlace=BR&source=ss&ref=as_ss_li_til&ad_type=product_link&tracking_id=schmitz-20&language=pt_BR&marketplace=amazon&region=BR&placement=B084DWCZY6&asins=B084DWCZY6&linkId=f91c6b91ae04618cfc0e3da973c34e6a&show_border=true&link_opens_in_new_window=true\"></iframe> | <iframe sandbox=\"allow-popups allow-scripts allow-modals allow-forms allow-same-origin\" style=\"width:120px;height:240px;\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" frameborder=\"0\" src=\"//ws-na.amazon-adsystem.com/widgets/q?ServiceVersion=20070822&OneJS=1&Operation=GetAdHtml&MarketPlace=BR&source=ss&ref=as_ss_li_til&ad_type=product_link&tracking_id=schmitz-20&language=pt_BR&marketplace=amazon&region=BR&placement=B084J4WP6J&asins=B084J4WP6J&linkId=d183581ea47832fa69879cd03011f696&show_border=true&link_opens_in_new_window=true\"></iframe> | <iframe sandbox=\"allow-popups allow-scripts allow-modals allow-forms allow-same-origin\" style=\"width:120px;height:240px;\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" frameborder=\"0\" src=\"//ws-na.amazon-adsystem.com/widgets/q?ServiceVersion=20070822&OneJS=1&Operation=GetAdHtml&MarketPlace=BR&source=ss&ref=as_ss_li_til&ad_type=product_link&tracking_id=schmitz-20&language=pt_BR&marketplace=amazon&region=BR&placement=B08KGWJDRZ&asins=B08KGWJDRZ&linkId=3a8741721183f583bf43717a6e18c5a3&show_border=true&link_opens_in_new_window=true\"></iframe> |\n\n## Pareando a Alexa com o MacBook\n\nPara parear a **Alexa** com o MacBook, você pode poderá utilizar o App da Alexa, ou efetuar o procedimento diretamente através de um Navegador no MacBook.\n\nNeste caso, vamos fazer através de um Navegador.\n\nAbra o site [https://alexa.amazon.com/](https://alexa.amazon.com/)\nEfetue o login, com a conta da Amazon que utiliza na sua **Alexa**.\nNo menu à esquerda, selecione **Configurações**\nNa lista de **Dispositivos**, selecione o dispositivo que deseja configurar\nAcesse a sessão **Bluetooth**\nE em seguida escolha a opção **Parear um novo dispositivo**\n\n### No MacBook ###\n\nAbra as preferência do Bluetooth, clicando no ícone do Bluetooth na \"barra do relógio\", ou então acesse a opção \"Bluetooth\" pelo **Spotlight**\n\nNa janela que se abre, aguarde a Alexa surgir na lista de opções.\n\nQuando isto ocorrer, basta selecionar a opção **Conectar**.\n\nCom isto, a Alexa irá exibir um aviso sonoro, informando que o pareamento ocorreu com sucesso!\n\nDeste ponto em diante, basta seleciona a Alexa como dispositivo de saída de áudio, clicando no ícone de Volume na \"barra do relógio\".\n\nNas próximas vezes que ligar o MacBook, será necessário apenas efetuar a conexão com a Alexa, clicando no ícone do Bluetooth na \"barra do relógio\", selecionando-a e conectando-se com a mesma.\n","tags":["mac-os-x","macos","alexa","bluetooth"],"categories":["blog"]},{"title":"Instalando o gerenciador de pacotes Yarn no macOS","url":"/blog/2020/08/28/instalando-o-gerenciador-de-pacotes-yarn-no-macos/","content":"O **Yarn** é um gerenciador de pacotes, alternativo ao popular e conhecido **npm**, o qual surgiu de um desconforto na forma como o npm se comportava e funcionava na época.\n\nEmbora seja uma alternativa ao **npm**, o **yarn** se utiliza dos mesmos servidores de repositório do npm, portanto, ele é 100% compatível com este e todo e qualquer módulo que estiver disponível no npm, estará disponível também no yarn.\n\nVocê pode utilizar tanto o **npm**, quanto o **yarn**, em um projeto, pois toda a estrutura é compatível, entretanto você pode verificar alguns detalhes adicionais em: [Migrando do NPM para o Yarn](https://classic.yarnpkg.com/en/docs/migrating-from-npm)\n\n# Instalando o Yarn no macOS via Brew\n\nPara instalar o Yarn no macOS, a forma mais fácil é através do Brew:\n\n\tbrew install yarn\n\nSe você nunca utilizou o **Brew**, você pode saber mais sobre ele em: [Instalando o gerenciador de pacotes Brew](https://www.maiconschmitz.com.br/blog/2015/01/09/instalando-o-gerenciador-de-pacotes-brew/).\n\n## Atualizando o Yarn\n\nDurante o uso do Yarn, caso o mesmo esteja desatualizado, ele irá lhe informar que existem atualizações disponíveis.\n\nAssim, para atualizar, bastará executar:\n\n\tbrew upgrade yarn\n\n## Checando a versão do Yarn\n\nPara checar a versão atual do Yarn, basta executar:\n\n\tyarn --version\n\n# Usando o Yarn\n\nPrimeiramente, acesse o diretório do projeto onde deseja executar os comandos.\n\n## Criando um novo projeto\n\n\tyarn init\n\n\n## Adicionando módulos\n\n\tyarn add [modulo]\n\tyarn add [modulo]@[versao]\n\tyarn add [modulo]@[tag]\n\nDiferente do **npm**, onde seria necessário passar o parâmetro **--save** caso você desejasse que o módulo fosse adicionado ao **package..json**, no Yarn, este já é o comportamento padrão!\n\n## Adicionando módulos à diferentes categorias\n\nPara adicionar um módulo apenas na categoria de desenvolvimento, execute:\n\n\tyarn add [modulo] --dev\n\nNo **npm**, para ter o mesmo comportamento, seria necessário passar o parâmetro **--save-dev**.\n\n## Atualizando módulos\n\nPara atualizar um módulo, execute:\n\n\tyarn upgrade [modulo]\n\tyarn upgrade [modulo]@[versao]\n\tyarn upgrade [modulo]@[tag]\n\n## Removendo módulos\n\nPara remover um módulo, execute:\n\n\tyarn remove [modulo]\n\n## Instalando todos os módulos de um projeto\n\nPara instalar os módulos de um projeto, basta executar:\n\n\tyarn\n\nou\n\n\tyarn install\n","tags":["npm","yarn"],"categories":["blog"]},{"title":"Rodando e monitorando aplicações Node.js com PM2","url":"/blog/2020/07/21/rodando-e-monitorando-aplicacoes-nodejs-com-pm2/","content":"\nO **PM2** é um gerenciador de processos, que irá lhe ajudar à gerenciar e manter sua aplicação sempre online.\n\nLargamente utilizado para o gerenciamento de aplicações **Node.js**, para o qual possui inclusive, um controle mais apurado, como por exemplo o gerenciamento e a execução da aplicação em modo **cluster**.\n\nNo entanto, ele pode ser utilizado também para gerenciar de uma forma mais simples, aplicações escritas em outras linguagens, seja interpretadas ou compiladas, como **Python** e **GO**, por exemplo.\n\n\n## Instalando o PM2\n\nPrimeiramente, você deve instalar o **PM2** de forma global, através do comando:\n\n\tnpm install pm2@latest -g\n\n\n## Registrando e/ou iniciando um processo com o PM2\n\nCom o **PM2** instalado, vamos partir para a execução do seu processo.\n\nDe forma semelhante à qual você rodaria a sua aplicação, seja com um \"npm start\" ou através da execução direta do seu script de entrada, <s>normalmente index.js</s>.\n\nO PM2 também possui um comando \"start\" e este serve tanto para registrar, quanto para iniciar um processo que já tenha sido \"registrado\" no PM2 anteriormente.\n\nEm nosso exemplo, o script inicial da aplicação, será o entrypoint.js.\n\nLogo, para executar a aplicação, deve-se executar o comando:\n\n    pm2 start entrypoint.js\n\n\n### Definindo um nome para a aplicação\n\nÉ possível definir um nome para o processo, passando o parâmetro \"--name NOME\", onde NOME é o nome à ser dado para a aplicação.\n\nEm nosso exemplo, vamos nomear nossa aplicação como \"API\":\n\n    pm2 start entrypoint.js --name API\n\nNeste caso, todos os comandos subsequentes poderão ser executados usando o nome da aplicação, devendo-se substituir \"entrypoint.js\" por \"API\".\n\nExemplo:\n\n    pm2 start API\n\nMas não se esqueça, a primeira execução deverá ser completa, como por exemplo:\n\n    pm2 start entrypoint.js --name API\n\n\n### Recarregar ao atualizar\n\nSe você desejar que a aplicação seja recarregada, sempre que houver uma atualização do seu conteúdo (hot reload), de forma semelhante ao que o **nodemon** faz, então você deverá roda-la com o parâmetro \"--watch\".\n\nExemplo:\n\n    pm2 start entrypoint.js --name API --watch\n\n\n## Reiniciando um processo\n\nSe você não deseja utilizar o parâmetro \"--watch\" e deseja controlar quando e como reiniciar sua aplicação, você poderá utilizar o comando \"restart\".\n\n    pm2 restart API\n\n\n## Parando um processo\n\nSe você desejar parar a execução da sua aplicação momentaneamente, você deverá utilizar o comando \"stop\".\n\n    pm2 stop API\n\n\n## Deletar um processo\n\nQuando não houver mais a necessidade de rodar um determinado processo, você poderá efetuar a deleção do mesmo, com o comando \"delete\".\n\n    pm2 delete API\n\n\n## Salvando as configurações\n\nSempre que uma configuração for efetuada e um determinado estado precisar ser salvo, você deverá definir isto explicitamente, executando o comando \"save\":\n\n    pm2 save\n\nRodando este comando, a lista de processos à serem inicializados ou não pelo PM2 será salva e consequentemente será \"recuperada\", no caso da reinicialização do sistema operacional ou outra circunstância.\n\n\n## Habilitando a inicialização do PM2 como um serviço\n\nCom relação à inicialização do PM2 junto à inicialização do sistema operacional, é importante notar que você deverá habilitar este recurso, executando o comando:\n\n    pm2 startup\n\n\n## Monitorando os processos com o PM2\n\nBasicamente, existem 2 comandos que irão lhe apresentar o **status** das aplicações, bem como lhe ajudarão à **monitorar** a execução das mesmas.\n\nSão eles:\n\n    pm2 status\n    pm2 monit\n\nRode e explore estes comandos à vontade.","tags":["nodejs","npm","python","pm2","nodemon","hotreload","go"],"categories":["blog"]},{"title":"Gerenciando multiplas versões do Node.js no macOS com o NVM","url":"/blog/2020/07/06/gerenciando-multiplas-versoes-do-nodejs-no-macos-com-nvm/","content":"O Node Version Manager (NVM), é um ferramenta que permite gerenciar multiplas versões do **Node.js**, em seu sistema operacional.\n\nIndependentemente da forma como o **Node.js** foi instalado inicialmente, é possível fazer uso do **nvm**, para passar a gerenciar as atualizações e instalações de outras versões do mesmo.\n\nEspecialmente útil, quando você precisa testar e rodar aplicações em diferentes versões do **Node.js**, seja ele tendo sido instalado via algum gerenciador de pacotes, ou até mesmo compilado à partir dos fontes.\n\n## Instalando o NVM\n\nPrimeiramente, você deve instalar o **NVM** através do **Brew**:\n\n\tbrew install nvm\n\nSe você nunca utilizou o **Brew**, você pode saber mais sobre ele em: [Instalando o gerenciador de pacotes Brew](https://www.maiconschmitz.com.br/blog/2015/01/09/instalando-o-gerenciador-de-pacotes-brew/).\n\nApós a instalação, você deve atualizar o seu profile (.profile, .zshrc ou .zprofile).\nPara isto, execute:\n\n\texport NVM_DIR=~/.nvm\n\tsource $(brew --prefix nvm)/nvm.sh\n\nPara verificar se a instalação ocorreu normalmente, você pode checar a versão do nvm com o comando:\n\n\tnvm --version\n\n## Instalando uma versão do Node.js com o NVM\n\nAgora que NVM esta instalado e acessível, você pode listar as versões disponíveis, executando:\n\n\tnvm ls-remote\n\nAssim, uma lista de versões lhe será apresentada.\n\nNeste momento, recomenda-se que seja instalado o **Node.js Erbium**.\n\nPortanto, execute:\n\n\tnvm install --lts=Erbium\n\nApós a instalação, você pode checar a versão do Node.js que esta instalada, com:\n\n\tnvm ls\n\nPor fim, você pode definir a versão atual, como a versão padrão (global), executando:\n\n\tnvm use default\n\nCom isto você tem o **Node.js** instalado na versão desejada.","tags":["macos","nodejs","npm","nvm","brew"],"categories":["blog"]},{"title":"Assistindo à vídeos do Browser em modo PiP no macOS e Windows","url":"/blog/2020/06/27/assistindo-videos-em-modo-pip-no-macos-e-windows/","content":"\nO modo **PiP**, ou **Picture in Picture**, é um recurso que lhe permite assistir à vídeos em uma pequena janela flutuante, sobre a sua tela atual.\n\nPopular e disponível em Smart TVs modernas, onde é possível assistir à uma transmissão de vídeo em uma pequena janela, enquanto assiste à algo na \"tela grande\", bem como nos smartphone Android e recentemente no iOS 14 (que na data desta publicacão, está na versão beta).\n\nDisponível em navegadores compatíveis com as extensões da [Chrome Web Store](https://chrome.google.com/webstore/category/extensions), como o próprio **Google Chrome**, [**Brave**](https://brave.com) e até mesmo o **Microsoft Edge**, é possível fazer o uso deste recurso e desacoplar uma pequena janela flutuante para assistir aos vídeos, da Netflix, YouTube, Amazon Prime Video, etc.\n\n### Habilitando o uso do modo PiP no Navegador\n\nPara ativar o PiP, você deve acessar a [Chrome Web Store](https://chrome.google.com/webstore/category/extensions), e instalar a extensão [**Picture-in-Picture Extension (by Google)**](https://chrome.google.com/webstore/detail/picture-in-picture-extens/hkgfoiooedgoejojocmhlaklaeopbecg?authuser=0).\n\nJá para usuários do **Firefox**, este recurso esta disponível de forma nativa, à partir da versão 71 do navegador.\n\n### Assistindo Vídeos em modo PiP através do Navegador\n\nApós instalada a extensão, bastará acessar seu site de vídeos desejado e clicar sobre o ícones de \"janelinha\", que estara disponível na barra do navegador, ou junto à imagem do vídeo.\n\n### Conteúdo para assistir\n\nSe deseja [conteúdo para assistir](https://amzn.to/3v2eX9a), você pode optar por fazer uma [assinatura Prime da Amazon](https://amzn.to/3v2eX9a), que lhe oferece diversos recursos, como frete grátis em compras, acesso à eBooks e acesso ao [Prime Vídeo](https://amzn.to/3v2eX9a).\n","tags":["macos","pip","windows","netflix","youtube","prime video","chrome","brave","edge","firefox"],"categories":["blog"]},{"title":"Instalar Raspberry Pi OS sem teclado, mouse e monitor","url":"/blog/2020/06/15/instalar-raspberry-pi-os-sem-teclado-mouse-monitor/","content":"\nO processo de instalação do **Raspberry Pi OS** é bastante simples.\n\nUma vez que você tenha gravado o cartão SD com o instalador, você deverá inseri-lo na Raspberry, conectar um teclado e mouse às entradas USB, bem como um display (monitor) à entrada HDMI e por fim, bastará ligar a alimentação à entrada Micro USB ou USB-C (dependendo do modelo da sua Raspberry Pi) e pronto.\n\nPara saber como criar um cartão com o instalador, acesse o Post: [Criando um cartão SD de Instalação do Raspberry Pi OS no macOS, Linux e Windows](https://www.maiconschmitz.com.br/blog/2020/06/08/criando-sd-de-instalacao-do-raspberry-pi-os-no-macos-linux-windows/)\n\nNeste momento, a **Raspberry Pi** irá ligar automaticamente e o boot ocorrerá à partir do cartão SD.\n\nMas e se você desejar instalar o Raspberry Pi OS em sua Raspberry, sem precisar de um teclado, mouse ou até mesmo um display?\n\n| Raspberry Pi 3  | Raspberry Pi 4  |\n| --------------- |:---------------:|\n| <a href=\"https://www.amazon.com.br/gp/product/B01CD5VC92?ie=UTF8&linkCode=li2&tag=schmitz-20&linkId=4f2021a2a4c1b0a33eec617fd9541a9a&language=pt_BR&ref_=as_li_ss_il\" target=\"_blank\"><img border=\"0\" src=\"//ws-na.amazon-adsystem.com/widgets/q?_encoding=UTF8&ASIN=B01CD5VC92&Format=_SL160_&ID=AsinImage&MarketPlace=BR&ServiceVersion=20070822&WS=1&tag=schmitz-20&language=pt_BR\" ></a><img src=\"https://ir-br.amazon-adsystem.com/e/ir?t=schmitz-20&language=pt_BR&l=li2&o=33&a=B01CD5VC92\" width=\"1\" height=\"1\" border=\"0\" alt=\"\" style=\"border:none !important; margin:0px !important;\" /> | <a href=\"https://www.amazon.com.br/gp/product/B07TC2BK1X?ie=UTF8&linkCode=li2&tag=schmitz-20&linkId=a1723e2362521127a480ceb4a9860096&language=pt_BR&ref_=as_li_ss_il\" target=\"_blank\"><img border=\"0\" src=\"//ws-na.amazon-adsystem.com/widgets/q?_encoding=UTF8&ASIN=B07TC2BK1X&Format=_SL160_&ID=AsinImage&MarketPlace=BR&ServiceVersion=20070822&WS=1&tag=schmitz-20&language=pt_BR\" ></a><img src=\"https://ir-br.amazon-adsystem.com/e/ir?t=schmitz-20&language=pt_BR&l=li2&o=33&a=B07TC2BK1X\" width=\"1\" height=\"1\" border=\"0\" alt=\"\" style=\"border:none !important; margin:0px !important;\" /> |\n\n# Instalar Raspberry Pi OS sem teclado, mouse e monitor\n\nPara efetuar a instalação do Raspberry Pi OS sem a necessidade de um teclado, mouse e monitor, você deverá seguir alguns pequenos passos.\n\nLogo após a gravação do instalador, antes de remover o cartão SD do seu computador, siga com os passos abaixo, de acordo com a sua realidade.\n\nApós concluídos os passos abaixo, remova o cartão SD do computador, insira-o na Raspberry e conecte o cabo de energia. Se sua Raspberry não possuir conexão WiFi, também será necessário conectar um cabo de rede.\n\n## Habilitando o acesso Remoto via SSH\n\nPara efetuar o acesso e a instalação de forma remota, você deverá habilitar o acesso via SSH, que por padrão esta inativo.\n\nLogo após a gravação da imagem no cartão SD, sem remove-lo do computador, basta acessar a unidade do cartão SD, que possuirá o nome \"boot\" e então, você deverá criar em sua raiz, um arquivo de nome \"**SSH**\", sem extensão, sem conteúdo.\n\nPara fazer isto no Terminal do macOS, por exemplo, basta acessar o volume:\n\n    cd /Volumes/boot\n\nE criar o arquivo:\n\n    touch SSH\n\n## Configuração do WiFi\n\nPara que sua Raspberry Pi conecte-se automaticamente à uma rede WiFi no primeiro boot, você precisará informar as credenciais de acesso em um arquivo apropriado.\n\nApós a gravação da imagem no cartão SD, sem remove-lo do computador, bastará acessar a unidade do cartão SD, que possuirá o nome \"boot\" e então, deverá criar em sua raiz, um arquivo de nome \"**wpa_supplicant.conf**\".\n\nUma vez que tenha criado o arquivo **wpa_supplicant.conf**, abra-o para edição em seu editor de preferência e insira o conteúdo abaixo no mesmo, alterando os pontos adequados.\n\n\n    ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev\n    update_config=1\n    country=<Insira aqui as duas letras correspondentes ao código ISO 3166-1 do seu país>\n\n    network={\n      ssid=\"<Insira aqui o Nome da sua rede Wireless>\"\n      psk=\"<Insira aqui a Senha da sua rede Wireless>\"\n    }\n\nPara saber o código do seu país, você poderá consultar a [ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1 \"Lista ISO 3166-1\").\n\nPara o **Brasil**, basta preencher com **BR**.\n\n# Conectando-se à Raspberry Pi via SSH\n\nUma vez que sua Raspberry Pi tenha sido ligada, em no máximo 1 minuto, já será possível conectar-se à mesma via SSH.\n\nPor padrão, o **Raspberry Pi OS** define o nome da sua Raspberry Pi em sua rede local, com o nome **raspberrypi.local**.\n\nIsto significa que, você poderá disparar um **ping** contra sua **Raspberry**, utilizando o endereço **raspberrypi.local**, como por exemplo:\n\n    ping raspberrypi.local\n\nPara conectar-se via SSH, você deverá utilizar o usuário: **pi** e a senha: **raspberry**\n\nSe você estiver no Linux ou macOS, acesse o terminal e execute:\n\n    ssh raspberrypi.local -l pi\n\nSe você estiver no Windows, poderá utilizar o [Putty](https://www.putty.org/ \"Putty\").","tags":["linux","ssh","macos","windows","sd","raspberry-pi","raspbian","pendrive","raspberry-pi-os"],"categories":["blog"]},{"title":"Criando cartão SD de Instalação do Raspberry Pi OS no macOS, Linux e Windows","url":"/blog/2020/06/08/criando-sd-de-instalacao-do-raspberry-pi-os-no-macos-linux-windows/","content":"\nO **Raspberry Pi** dispensa apresentações, mas basicamente é um mini computador com arquitetura **ARM**, composto por um hardware que integra tudo em um única placa, que à depender das suas versões, possui conexão de Audio, HDMI, USB, SD, Ethernet, GPIO, dentre outras.\n\nDe tamanho diminuto, comparável ao tamanho de um cartão de crédito, ou até mesmo menor, na versão Raspberry Pi Zero/W.\n\nDiversos são os sistemas operacionais disponíveis para o Raspberry Pi, tais como o Ubuntu, OSMC, Mozilla WebThings, RISC OS e o agora oficial Raspberry Pi OS.\n\nO Raspberry Pi OS é a versão oficial do sistema operacional do Raspberry Pi, sendo até o momento, compatível apenas com 32bits, mas é claro, por pouco tempo, visto que esforços estão sendo aplicados, para compatibiliza-lo com 64bits, o que irá possibilitar um maior aproveitamento da memória RAM (endereçamento acima de 3 GB), importante principalmente para a nova Raspberry Pi 4, que recentemente recebeu uma atualização, que em uma de suas versões que passa à vir equipada com 8GB de RAM.\n\nAcessando o site da [https://www.raspberrypi.org](https://www.raspberrypi.org/downloads/ \"https://www.raspberrypi.org\"), é possível baixar na seção [Downloads](https://www.raspberrypi.org/downloads/ \"Download Raspberry Pi OS\"), a última versão do Raspberry Pi OS, o qual anteriormente era conhecido por Raspbian e que estava em sua versão Buster.\n\n| Raspberry Pi 3  | Raspberry Pi 4  |\n| --------------- |:---------------:|\n| <a href=\"https://www.amazon.com.br/gp/product/B01CD5VC92?ie=UTF8&linkCode=li2&tag=schmitz-20&linkId=4f2021a2a4c1b0a33eec617fd9541a9a&language=pt_BR&ref_=as_li_ss_il\" target=\"_blank\"><img border=\"0\" src=\"//ws-na.amazon-adsystem.com/widgets/q?_encoding=UTF8&ASIN=B01CD5VC92&Format=_SL160_&ID=AsinImage&MarketPlace=BR&ServiceVersion=20070822&WS=1&tag=schmitz-20&language=pt_BR\" ></a><img src=\"https://ir-br.amazon-adsystem.com/e/ir?t=schmitz-20&language=pt_BR&l=li2&o=33&a=B01CD5VC92\" width=\"1\" height=\"1\" border=\"0\" alt=\"\" style=\"border:none !important; margin:0px !important;\" /> | <a href=\"https://www.amazon.com.br/gp/product/B07TC2BK1X?ie=UTF8&linkCode=li2&tag=schmitz-20&linkId=a1723e2362521127a480ceb4a9860096&language=pt_BR&ref_=as_li_ss_il\" target=\"_blank\"><img border=\"0\" src=\"//ws-na.amazon-adsystem.com/widgets/q?_encoding=UTF8&ASIN=B07TC2BK1X&Format=_SL160_&ID=AsinImage&MarketPlace=BR&ServiceVersion=20070822&WS=1&tag=schmitz-20&language=pt_BR\" ></a><img src=\"https://ir-br.amazon-adsystem.com/e/ir?t=schmitz-20&language=pt_BR&l=li2&o=33&a=B07TC2BK1X\" width=\"1\" height=\"1\" border=\"0\" alt=\"\" style=\"border:none !important; margin:0px !important;\" /> |\n\n## Criando o cartão SD\n\nO [Etcher](https://www.balena.io/etcher/ \"https://www.balena.io/etcher/\"), é um softwate [OpenSource](https://github.com/balena-io/etcher \"https://github.com/balena-io/etcher\"), multiplataforma (macOS, Linux e Windows), que permite efetuar a gravação de imagens em cartões SD e Drives USB de forma bastante rápida, simples e intuitiva.\n\nApós baixar e executar o [Etcher](https://www.balena.io/etcher/ \"https://www.balena.io/etcher/\"), bastará selecionar a imagem anteriormente baixada do site da Raspberry Pi. Não é preciso descompactar a imagem e inclusive é possível apenas informar uma URL para a imagem.\n\nUma vez que a gravação da imagem estiver concluída, é possível partir para a instalação.\n\n### Alternativa ao Etcher\n\nUma alternativo ao [Etcher](https://www.balena.io/etcher/ \"https://www.balena.io/etcher/\"), é que é possível de ser executada via linha de comando, seja no macOS ou Linux, é através do comando **dd**.\n\nSe quiser saber mais, sobre como instalar desta forma, poderá ler o artigo [Criando cartão SD com Raspbian no Mac OS X](https://www.maiconschmitz.com.br/blog/2015/08/24/criando-sd-com-raspbian-no-mac-os-x/).","tags":["linux","mac-os-x","macos","windows","sd","raspberry-pi","raspbian","pendrive","raspberry-pi-os"],"categories":["blog"]},{"title":"Brave, o navegador com Blockchain e Criptomoedas BAT","url":"/blog/2019/11/14/brave-um-navegador-com-blockchain-e-criptomoedas/","content":"\nO **Brave** é um navegador de internet baseado no projeto **Chromium** (o mesmo do **Google Chrome** e do **Microsoft Edge**).\nDesenvolvido pela **Brave Software**, a empresa é liderada por **Brendan Eich**, criador do **JavaScript** e que por muito tempo esteve à frente da **Fundação Mozilla**, mantenedora do navegador **Firefox**.\n\n## Brave\n\nO principal diferencial do [Brave](https://brave.com), é a [**Basic Attention Token** (**BAT**)](https://basicattentiontoken.org/). Estas criptomoedas foram baseadas no **Blockchain** do **Ethereum** e sua proposta é transformar a forma como os anúncios são remunerados na Internet.\n\nO Brave também oferece uma excelente performance, sendo atualmente mais rápido que seus concorrentes no carregamento de páginas, além de oferecer nativamente, o bloqueio de anúncios de terceiros e da reprodução automática vídeos, por exemplo.\n\nCom o Brave, é possível não só navegar de forma privada, mas também utilizar uma janela privada através da qual você pode navegar utilizando a rede **Tor**.\n\nTotalmente compatível com os recursos do Google Chrome, o Brave lhe permite inclusive, fazer o uso e a instalação das Extensões do Chrome, diretamente através da [Chrome Web Store](https://chrome.google.com/webstore/category/extensions).\n\n### Brave Rewards\n\nO **Brave Rewards** é a forma através da qual o Brave gerencia o recebimento de tokens **BAT**. Os anúncios são apresentados ao usuário baseado nos interesses do mesmo, os quais são verificados de forma anônima e automática, de acordo com o comportamento de navegação.\n\nDentro do Brave Rewards, é possível ainda, configurar doações automáticas para os sites que você mais visita, ou ainda, efetuar doações para criadores de conteúdo.\n\nCom o [Brave Rewards Creators](https://creators.brave.com/), é possível presentear tokens para o criador do site o qual você visita, como forma de fomentar a criação de conteúdo e além disso, você mesmo, pode se tornar um [**Creator**](https://creators.brave.com/sign-up) se desejar, adicionando seu Site, Canal do Youtube, ou ainda contas do Twitter, Github, dentre outras.","tags":["brave","chromium","ethereum","blockchain","criptomoeda","bat","tor"],"categories":["blog"]},{"title":"Terminal colorido no macOS com ZSH","url":"/blog/2018/12/02/terminal-colorido-no-macos-com-zsh/","content":"\nO **ZSH** é um shell interativo e também um interpretador de scripts, semelhante ao bash, porém oferece uma ampla gama de configurações e temas.\n\n## Instalando o ZSH com o \"Oh My ZSH!\"\n\nPara instalar o **ZSH**, basta abrir o **Terminal** e rodar um simples comando:\n\n\t$ sh -c \"$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\n\nO processo de instalação é rápido e simples.\n\nAo final, basta reiniciar o Terminal (feche-o e abra novamente)\n\nCom isto o ZSH já estará disponível por padrão sempre que abrir o **Terminal**.","tags":["mac-os-x","macos","terminal","zsh"],"categories":["blog"]},{"title":"Instalando Node.js no Raspbian Stretch","url":"/blog/2018/11/28/instalando-nodejs-no-raspbian-stretch/","content":"\n| Raspberry Pi 3  | Raspberry Pi 4  |\n| --------------- |:---------------:|\n| <a href=\"https://www.amazon.com.br/gp/product/B01CD5VC92?ie=UTF8&linkCode=li2&tag=schmitz-20&linkId=4f2021a2a4c1b0a33eec617fd9541a9a&language=pt_BR&ref_=as_li_ss_il\" target=\"_blank\"><img border=\"0\" src=\"//ws-na.amazon-adsystem.com/widgets/q?_encoding=UTF8&ASIN=B01CD5VC92&Format=_SL160_&ID=AsinImage&MarketPlace=BR&ServiceVersion=20070822&WS=1&tag=schmitz-20&language=pt_BR\" ></a><img src=\"https://ir-br.amazon-adsystem.com/e/ir?t=schmitz-20&language=pt_BR&l=li2&o=33&a=B01CD5VC92\" width=\"1\" height=\"1\" border=\"0\" alt=\"\" style=\"border:none !important; margin:0px !important;\" /> | <a href=\"https://www.amazon.com.br/gp/product/B07TC2BK1X?ie=UTF8&linkCode=li2&tag=schmitz-20&linkId=a1723e2362521127a480ceb4a9860096&language=pt_BR&ref_=as_li_ss_il\" target=\"_blank\"><img border=\"0\" src=\"//ws-na.amazon-adsystem.com/widgets/q?_encoding=UTF8&ASIN=B07TC2BK1X&Format=_SL160_&ID=AsinImage&MarketPlace=BR&ServiceVersion=20070822&WS=1&tag=schmitz-20&language=pt_BR\" ></a><img src=\"https://ir-br.amazon-adsystem.com/e/ir?t=schmitz-20&language=pt_BR&l=li2&o=33&a=B07TC2BK1X\" width=\"1\" height=\"1\" border=\"0\" alt=\"\" style=\"border:none !important; margin:0px !important;\" /> |\nA forma mais simples de instalar o **Node.js** no **Raspbian Stretch** é através do repositório oficial do Node.js.\n\nAtualmente, as seguintes versões do Node.js estão disponíveis:\n\n\tVersão 06: https://deb.nodesource.com/setup_6.x\n\tVersåo 08: https://deb.nodesource.com/setup_8.x\n\tVersão 10: https://deb.nodesource.com/setup_10.x\n\tVersão 11: https://deb.nodesource.com/setup_11.x\n\nNeste caso, optei por instalar a versão 10 do Node.js, adicionando o repositório que segue:\n\n\t$curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -\n\nEm seguida, basta instalar o Node.js\n\n\t$sudo apt-get install -y nodejs\n\nAo final, para testar o Node.js, basta executar:\n\n\t$node -v\n","tags":["nodejs","raspberry-pi","raspbian"],"categories":["blog"]},{"title":"Desfazendo um Fusion Drive no macOS","url":"/blog/2018/11/25/desfazendo-um-fusion-drive-no-mac/","content":"\nO **Fusion Drive**, é um recurso que se encontra disponível nas versões mais recentes do macOS e que possibilita efetuar a junção de um ou mais discos, da tal forma à lhe disponibilizar apenas um único **volume virtual**.\n\nDesta forma, é possível juntar 2 SSDs, ou então um SSD e um HDD (HD) em apenas um volume aparente.\n\nAo efetuar a junção de um SSD com um HD, você terá os benefícios da velocidade do SSD, com a capacidade de armazenamento do HD.\n\nO macOS gerencia o uso deste volume, da melhor forma possível, mantendo arquivos que são mais acessados no SSD, enquanto arquivos que são menos acessados, são mantidos no HD. Tudo isso se dá de forma transparente, sem qualquer intervenção do usuário.\n\nSe você deseja criar um Fusion Drive no macOS, pode verificar o post: [Unindo um SSD com um HD e criando um Fusion Drive no Mac](http://www.maiconschmitz.com.br/blog/2017/07/03/unindo-um-ssd-com-um-hd-e-criando-um-fusion-drive-no-mac \"Unindo um SSD com um HD e criando um Fusion Drive no Mac\").\n\nObviamente um Fusion Drive traz benefícios, porém em contra partida, pode trazer o malefício do conjunto ser mais lento do que o uso exclusivo de um SSD.\n\nNestes casos, pode ser interessante desfazer um Fusion Drive.\n\n## Desfazendo o Fusion Drive\n\n**Atenção:** Desfazer um Fusion Drive, fará com que todo o conteúdo do volume seja perdido/apagado.\n\nReinicie, ou ligue o Mac, mantendo a tecla \"Option\" pressionada.\n\nApós o carregamento da interface, selecione a opção de menu \"Utilitários\" / \"Terminal\".\n\nCom o Terminal aberto, execute o comando \"**diskutil cs list**\", para obter uma lista de volumes lógicos:\n\n\t$diskutil cs list\n\nEste comando irá listar todos os volumes lógicos existentes no seu Mac.\n\nA informação principal, à ser observada, é o UUID que é listado logo após o título: **Logical Volume Group**.\nO UUID é um conjunto de caracteres formado por 5 blocos separados por hífens, algo como:  **XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX**.\n\nPara desfazer o volume lógico, basta executar *diskutil cs delete XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX*, onde XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX é o UUID anteriormente listado pelo comando **diskutil cs list**:\n\n    $diskutil cs delete XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n\nApós alguns instantes, o processo será concluído.\n\nDeste ponto em diante, o seu **volume virtual** já está desfeito e você pode voltar à utilizar os discos individualmente.\n","tags":["mac-os-x","macos","ssd","hdd","hd","fusion","drive"],"categories":["blog"]},{"title":"Instalação Limpa do macOS Mojave","url":"/blog/2018/10/15/instalacao-limpa-do-mac-os-mojave/","content":"Fazendo uma instalação limpa (do zero) do macOS Mojave.\n\nCom o seu OS X/macOS ainda em funcionamento, efetue o download da Instalação do [**macOS Mojave**](https://www.apple.com/br/macos/mojave/ \"macOS Mojave\") através da **App Store**.\n\nCom o download concluído, cancele a instalação.\n\nConecte um HD Externo, Pen drive ou Cartão SD, de no mínimo 8 GB ao Mac.\n\nAcesse o \"Utilitário de Disco\" pelo **Spotlight** ou através do diretório \"/Applications/\".\n\nEstando no \"Utilitário de Disco\", selecione o Dispositivo, na lista de Drives e clique sobre a aba \"Apagar\".\n\nEm \"Nome\", defina para \"MACOS\", em \"Formato\" selecione a opção \"Mac OS Expandido (Journaling)\", em \"Esquema\", escolha \"Mapa de Partição Apple\" e clique no botão \"Apagar...\".\n\nQuando a formatação estiver concluída, feche o \"Utilitário de Disco\".\n\nAcesse o \"Terminal\" pelo **Spotlight** ou através do diretório \"/Applications/\".\n\nExecute o seguinte comando:\n\n\tsudo /Applications/Install\\ macOS\\ Mojave.app/Contents/Resources/createinstallmedia  --volume /Volumes/MACOS --applicationpath /Applications/Install\\ macOS\\ Mojave.app/ --nointeraction\n\nO processo de cópia será efetuado e a seguinte mensagem será exibida:\n\n\tErasing Disk: 0%... 10%... 20%... 30%...100%...\n\tCopying installer files to disk...\n\tCopy complete.\n\tMaking disk bootable...\n\tCopying boot files...\n\tCopy complete.\n\tDone.\n\n\n## Hora da Instalação\n\nCom o Dispositivo conectado ao Mac, reinicie, ou ligue-o, mantendo pressionada ou pressionando repetidas vezes, a tecla \"Option\".\n\nApós o carregamento, deverá ser exibida uma \"lista\", na qual você deverá selecionar o dispositivo para o qual copiou a instalação.\n\nDeste ponto em diante, você possui as seguinte opções:\n\n* Iniciar\n* Reinstalar o macOS\n* Instalar o macOS\n\nOs processos de Reinstalar e Instalar o macOS, são praticamente os mesmos, com a diferença de a reinstalação manter seus arquivos, programas e algumas configuração, enquanto a instalação limpa, irá lhe obrigar à reconfigurar e instalar novamente todos os seus programas, serviços, etc...\n\n## APFS (Apple File System) X Mac OS Expandido\n\nCom o macOS à partir do High Sierra, temos um novo sistema de arquivos, o APFS (Apple File System), o qual é a opção padrão e ideal à ser utilizada caso você possua uma unidade de estado sólido (SSD).\n\nCaso tenha dúvidas entre APFS (Apple File System) ou Mac OS Expandido, consulte [Como escolher entre APFS e Mac OS Expandido ao formatar um disco para o Mac] (https://support.apple.com/pt-br/HT208033 \"Como escolher entre APFS e Mac OS Expandido ao formatar um disco para o Mac\")\n\n## Instalar o macOS\n### Instalaçao Limpa do macOS com SSD\n\n* Selecione o \"Utilitário de Disco\" e escolha a opção \"Continuar\".\n* Selecione o \"Disco Principal\" e clique na opção \"Apagar\", no topo da janela.\n\t* Defina um nome para o Disco, exemplo: \"OSX\"\n\t* Em Formato, selecione/mantenha a opção: \"APFS (Distinção de maiúsculas)\"\n\t* Confirme as opções acima, clicando em \"Apagar\".\n* Aguarde e conclusão do processo.\n* Feche o \"Utilitário de Disco\".\n* Selecione a opção \"Instalar o macOS\" e siga o passo-a-passo.\n","tags":["mac-os-x","macos"],"categories":["blog"]},{"title":"Atualizando o Ruby no macOS","url":"/blog/2018/08/04/atualizando-o-ruby-no-macos/","content":"\nPor padrão o macOS Sierra vem com o Ruby na versão 2.0 instalado.\n\nPara utilizar as **gems** mais atuais do **Ruby**, se faz necessário atualizar o Ruby para alguma versão mais recente.\n\n## Verifique a versão do Ruby instalada.\n\nVá até o terminal e execute o seguinte comando:\n\n\t$ ruby -v\n\n## Baixando o Ruby\n\nPara efetuar a atualizaão do Ruby, estando no Terminal, execute:\n\n\t$ curl -sSL https://get.rvm.io | bash -s stable\n\nApós a instalação, feche o terminal que utilizou e abra-o novamente.\n\nAgora, você pode verificar as versões disponíveis do Ruby para upgrade.\n\nPara isto, execute:\n\n\t$ rvm list known\n\nO seu retorno, será algo semelhante à isto:\n\n\t# MRI Rubies\n\t[ruby-]1.8.6[-p420]\n\t[ruby-]1.8.7[-head] # security released on head\n\t[ruby-]1.9.1[-p431]\n\t[ruby-]1.9.2[-p330]\n\t[ruby-]1.9.3[-p551]\n\t[ruby-]2.0.0[-p648]\n\t[ruby-]2.1[.10]\n\t[ruby-]2.2[.10]\n\t[ruby-]2.3[.7]\n\t[ruby-]2.4[.4]\n\t[ruby-]2.5[.1]\n\t[ruby-]2.6[.0-preview2]\n\truby-head\n\n\t# for forks use: rvm install ruby-head-<name> --url https://github.com/github/ruby.git --branch 2.2\n\n\t# JRuby\n\tjruby-1.6[.8]\n\tjruby-1.7[.27]\n\tjruby-9.1[.17.0]\n\tjruby[-9.2.0.0]\n\tjruby-head\n\n\t# Rubinius\n\trbx-1[.4.3]\n\trbx-2.3[.0]\n\trbx-2.4[.1]\n\trbx-2[.5.8]\n\trbx-3[.100]\n\trbx-head\n\n\t# TruffleRuby\n\ttruffleruby[-1.0.0-rc2]\n\n\t# Opal\n\topal\n\n\t# Minimalistic ruby implementation - ISO 30170:2012\n\tmruby-1.0.0\n\tmruby-1.1.0\n\tmruby-1.2.0\n\tmruby-1.3.0\n\tmruby-1[.4.0]\n\tmruby[-head]\n\n\t# Ruby Enterprise Edition\n\tree-1.8.6\n\tree[-1.8.7][-2012.02]\n\n\t# Topaz\n\ttopaz\n\n\t# MagLev\n\tmaglev-1.0.0\n\tmaglev-1.1[RC1]\n\tmaglev[-1.2Alpha4]\n\tmaglev-head\n\n\t# Mac OS X Snow Leopard Or Newer\n\tmacruby-0.10\n\tmacruby-0.11\n\tmacruby[-0.12]\n\tmacruby-nightly\n\tmacruby-head\n\n\t# IronRuby\n\tironruby[-1.1.3]\n\tironruby-head\n\nComo neste momento, a versão do Ruby 2.6.0 estava ainda em preview, optei pela última versão da 2.5, no caso a 2.5.1.\n\nPara instalar, apenas execute:\n\n\t$ rvm install ruby-2.5.1\n\nAo final da instalação, execute:\n\n\t$ ruby -v\n\nSe ainda não estiver exibindo a versão recem instalada, então execute:\n\n\t$ rvm use ruby-2.5.1 --default\n","tags":["mac-os-x","macos","ruby"],"categories":["blog"]},{"title":"Netbeans 8.2 não cria nem abre projetos no macOS","url":"/blog/2018/07/16/netbeans-8-2-nao-cria-nem-abre-projetos-no-macos/","content":"\nRecentemente, instalei a **JDK 10** e ao instalar o **Netbeans 8.2**, me deparei com uma aplicação que não abria, nem criava projetos.\n\nSe o seu **Netbeans 8.2** esta apresentando este problema, então, muito provavelmente você possui uma versão incorreta da JDK instala.\n\nA versão correta da JDK para utilizar com o **Netbeans 8.2**, é a **JDK 8**!\n\nEntão, remova a sua **JDK 10**, instale a **JDK 8** e execute o Netbeans, sem maiores problemas.\n\n## Como remover o Java do macOS\n\nPara remover o Java do macOS, existem algum simples passos à serem seguidos.\n\nA JDK pode ser localizada na pasta: /Library/Java/JavaVirtualMachines\n\nEntão, abra o terminal e execute os comandos abaixo:\n\n    cd /Library/Java/JavaVirtualMachines\n    ls\n    sudo rm -rf jdk*\n\nSe desejar remover também o plugin e painel do Java, ainda no terminal, execute os seguintes comandos:\n\n    sudo rm -fr /Library/Internet\\ Plug-Ins/JavaAppletPlugin.plugin\n    sudo rm -fr /Library/PreferencePanes/JavaControlPanel.prefpane\n\n## Instalação da JDK e do Netbeans\n\nA JDK 8 pode ser encontrada no seguinte link de [Download](http://www.oracle.com/technetwork/pt/java/javase/downloads/jdk8-downloads-2133151.html \"JDK 8\").\n\nO Netbeans 8.2 pode ser encontrado no seguinte de [Download](https://netbeans.org/downloads/?pagelang=pt_BR \"Netbeans 8.2\").\n","tags":["macos","netbeans","java","jdk"],"categories":["blog"]},{"title":"Rodando o bash e aplicações Linux no Windows sem Cywin","url":"/blog/2018/07/03/rodando-o-bash-e-aplicacoes-linux-no-windows-sem-cygwin/","content":"\nRecentemente, o **Windows 10** em sua versão mais atualizada, incorporou o **WSL**, Subsistema Windows para Linux (do inglês Windows Subsystem for Linux).\n\nCom isto, você pode optar por utilizar o **bash** e uma infinidade de pacotes e aplicações Linux, diretamente no Windows.\n\nO Subsistema Windows para Linux não suporta aplicações gráficas, pois este não é o seu propósito, mas com ele, você pode rodar **Python**, **PHP**, **Node.js**, **Apache**, **Nginx** e uma infinidade de outros recursos, como **grep**, **sed**, etc e tudo isso, sem precisar instalar o **Cygwin**.\n\nAntes de efetuar a instalação do **WSL**, não se esqueça de habilitar o recurso.\nPara isto, abra o **PowerShell** como Administrador e execute:\n\n    Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux\n\nFeito isto, basta acessar a Windows Store e efetuar a instalação da distribuição de sua preferência.\n\nEu optei por instalar o [Ubuntu](https://www.microsoft.com/en-us/p/ubuntu/9nblggh4msv6?activetab=pivot%3aoverviewtab \"Ubuntu\"), mas você é livre para escolher qualquer uma das [distribuições](https://aka.ms/wslstore \"distribuições\") disponíveis.\n\nCaso você não possua o Windows 10, pode optar por utilizar o [Cygwin](https://www.cygwin.com/ \"Cygwin\"), o que já é de grande ajuda!","tags":["windows","bash","powershell","cygwin"],"categories":["blog"]},{"title":"Aumentando o espaço de armazenamento do MacBook com cartão SD","url":"/blog/2018/05/15/aumentando-o-espaco-de-armazenamento-do-macbook-com-cartao-sd/","content":"\nNem sempre é possível aumentar o espaço de armazenamento interno de um MacBook, através da substituição de um HD ou SSD existente, utilizando um de maior capacidade, ou até mesmo [instalando um segundo HD](http://www.maiconschmitz.com.br/blog/2017/04/28/instalando-2-hd-em-macbook-pro-mid-2011/).\n\nPara estes casos, existe uma outra opção, que é a utilização de um adaptador para cartões **MicroSD**.\n\nExistem diversas opções famosas no mercado, como o [**StorEDGE**](http://www.pny.eu/consumer/explore-all-products/apple-accessories/231-storedge-128gb) da PNY, o [**JetDrive**](http://www.transcend-info.com/apple/jetdrivelite/) da Transcend, o [**The Mini Drive**](http://www.theminidrive.com/), o [**Nifty**](http://minidrive.bynifty.com/) ou o [**Baseqi**](http://www.baseqi.com).\n\nIndependente da opção escolhida, ambos não passam de um pequeno adaptador de cartão MicroSD, que se encaixa e fica quase que por completo dentro da carcaça do MacBook. Além disso, o que ambos possuem em comum, é o alto preço agregado para um simples adaptador.\n\nNa contramão dos preços altos, você pode optar por um adaptado semelhante, mas [sem marca](https://www.ebay.com/sch/i.html?_from=R40&_trksid=p2323847.m570.l1313.TR10.TRC2.A0.H0.XMicro+.TRS2&_nkw=Micro+SD+Card+Adapter+For+MacBook&_sacat=0) e que não chega à custar U$ 2.00 dólares.\n\nObviamente, a grande diferença entre os modelos de marcas mais famosas contra o [Adaptador sem marca](https://www.ebay.com/sch/i.html?_from=R40&_trksid=p2323847.m570.l1313.TR10.TRC2.A0.H0.XMicro+.TRS2&_nkw=Micro+SD+Card+Adapter+For+MacBook&_sacat=0), além do preço, é o Design.\nO material de construção dos modelos mais caros é excelente, alguns são inclusive de alumínio e possuem um encaixe perfeito, dependendo do modelo, é claro, o que faz uma grande diferença estética.\n\nPorém, a função, independe de marca, é igual em ambos, uma vez que o que faz a diferença não é o adaptador, mas o cartão MicroSD que será utilizado.\nSendo assim, prefira investir na compra de um bom cartão MicroSD, de marca e procedência conhecida, além de optar apenas por modelos de Classe 10, que são os modelos mais rápidos.\n\nCom o adpatador em mãos, seja lá qual tenha escolhido, não ha muito o que fazer, à não ser inserir o MicroSD no mesmo e por fim, inserir o adaptador no MacBook.\n\nO modo de uso, segue o mesmo de qualquer \"disco\" conectado.\n\nDizem inclusive, que é possível utilizar este \"disco\", para criar um [Fusion Drive](http://www.maiconschmitz.com.br/blog/2017/07/03/unindo-um-ssd-com-um-hd-e-criando-um-fusion-drive-no-mac/ \"Unindo um SSD com um HD e criando um Fusion Drive no Mac\").","tags":["mac-os-x","macos","sd","ssd","hdd","hd","fusion","drive"],"categories":["blog"]},{"title":"Instalação Limpa do macOS High Sierra","url":"/blog/2018/05/08/instalacao-limpa-do-mac-os-high-sierra/","content":"Fazendo uma instalação limpa (do zero) do macOS High Sierra.\n\nCom o seu OS X/macOS ainda em funcionamento, efetue o download da Instalação do [**macOS High Sierra**](https://www.apple.com/br/macos/high-sierra/ \"macOS High Sierra\") através da **App Store**.\n\nCom o download concluído, cancele a instalação.\n\nConecte um HD Externo, Pen drive ou Cartão SD, de no mínimo 8 GB ao Mac.\n\nAcesse o \"Utilitário de Disco\" pelo **Spotlight** ou através do diretório \"/Applications/\".\n\nEstando no \"Utilitário de Disco\", selecione o Dispositivo, na lista de Drives e clique sobre a aba \"Apagar\".\n\nEm \"Nome\", defina para \"MACOS\", em \"Formato\" selecione a opção \"Mac OS Expandido (Journaling)\", em \"Esquema\", escolha \"Mapa de Partição Apple\" e clique no botão \"Apagar...\".\n\nQuando a formatação estiver concluída, feche o \"Utilitário de Disco\".\n\nAcesse o \"Terminal\" pelo **Spotlight** ou através do diretório \"/Applications/\".\n\nExecute o seguinte comando:\n\n\tsudo /Applications/Install\\ macOS\\ High\\ Sierra.app/Contents/Resources/createinstallmedia  --volume /Volumes/MACOS --applicationpath /Applications/Install\\ macOS\\ High\\ Sierra.app/ --nointeraction\n\nO processo de cópia será efetuado e a seguinte mensagem será exibida:\n\n\tErasing Disk: 0%... 10%... 20%... 30%...100%...\n\tCopying installer files to disk...\n\tCopy complete.\n\tMaking disk bootable...\n\tCopying boot files...\n\tCopy complete.\n\tDone.\n\n\n## Hora da Instalação\n\nCom o Dispositivo conectado ao Mac, reinicie, ou ligue-o, mantendo pressionada ou pressionando repetidas vezes, a tecla \"Option\".\n\nApós o carregamento, deverá ser exibida uma \"lista\", na qual você deverá selecionar o dispositivo para o qual copiou a instalação.\n\nDeste ponto em diante, você possui as seguinte opções:\n\n* Iniciar\n* Reinstalar o macOS\n* Instalar o macOS\n\nOs processos de Reinstalar e Instalar o macOS, são praticamente os mesmos, com a diferença de a reinstalação manter seus arquivos, programas e algumas configuração, enquanto a instalação limpa, obviamente irá lhe obrigar à reconfigurar e instalar novamente todos os seus programas, serviços, etc...\n\n## APFS (Apple File System) X Mac OS Expandido\n\nCom o macOS High Sierra, temos um novo sistema de arquivos, o APFS (Apple File System), o qual é a opção padrão e ideal à ser utilizada caso você possua uma unidade de estado sólido (SSD).\n\nCaso tenha dúvidas entre APFS (Apple File System) ou Mac OS Expandido, consulte [Como escolher entre APFS e Mac OS Expandido ao formatar um disco para o Mac](https://support.apple.com/pt-br/HT208033 \"Como escolher entre APFS e Mac OS Expandido ao formatar um disco para o Mac\")\n\n## Instalar o macOS\n### Instalaçao Limpa do macOS com SSD\n\n* Selecione o \"Utilitário de Disco\" e escolha a opção \"Continuar\".\n* Selecione o \"Disco Principal\" e clique na opção \"Apagar\", no topo da janela.\n\t* Defina um nome para o Disco, exemplo: \"OSX\"\n\t* Em Formato, selecione/mantenha a opção: \"APFS (Distinção de maiúsculas)\"\n\t* Confirme as opções acima, clicando em \"Apagar\".\n* Aguarde e conclusão do processo.\n* Feche o \"Utilitário de Disco\".\n* Selecione a opção \"Instalar o macOS\" e siga o passo-a-passo.\n","tags":["mac-os-x","macos"],"categories":["blog"]},{"title":"Criando uma Stack de Desenvolvimento LNMP","url":"/blog/2018/04/20/criando-uma-stack-de-desenvolvimento-lnmp/","content":"\nUma Stack **LNMP**, é aquela formada pela junção do **L**inux com **N**ginx, **M**ySQL e **P**HP.\nNesta Stack em especial, que é destinada ao uso durante o desenvolvimento de projetos, optei por utilizar o PHP na versão 7, bem como rodar tudo em cima do **Docker**.\n\nÉ importante saber que o Docker já deve estar instalado previamente.\nSe precisar de uma ajuda com o Docker, veja este post: [Iniciando com Docker no macOS](http://www.maiconschmitz.com.br/blog/2016/05/21/iniciando-com-docker-no-os-x \"Iniciando com Docker no macOS\")\n\n## Stack de Desenvolvimento\n\n`Atenção:` Nenhum tipo de configuração de segurança foi aplicada nesta Stack!\n\n## Banco de Dados centralizado em uma Imagem em Separado\n\nEsta Stack possui uma particularidade, que é a utilização de um único Servidor MySQL para todos os projetos, centralizando assim, todas as bases de dados em uma única imagem Docker (um só local).\n\n### Criando uma única Rede para as suas Imagens\n\nAcesse o terminal e execute o seguinte comando:\n\n    docker network create rede-local-docker\n\nOnde **rede-local-docker** é o nome da sua rede.\n\nMantenha este nome, para que você não precise editar os arquivos de configuração!\n\n### Criando um único Servidor MySQL\n\nAcesse o terminal e execute o comando abaixo, para rodar um container com MySQL na Rede previamente criada:\n\n    docker run --name servidor-mysql --network=rede-local-docker -v ˜/projetos/mysql/data/db:/var/lib/mysql -p 3306:3306 -e MYSQL_ROOT_PASSWORD=root -d mysql/mysql-server:5.7\n\nOnde **˜/projetos/mysql/data/db** é uma estrutura de diretórios, onde as bases de dados serão salvas.\n\nAltere este caminho de acordo com a sua necessidade!\n\nLembre-se, quando precisar rodar o servidor MySQL novamente, bastará que você execute o seguinte comando:\n\n    docker start servidor-mysql\n\n### Copiando e Rodando\n\nOs arquivos de configuração necessários, podem ser encontrados no repositório [Docker LNMP](https://github.com/maiconschmitz/docker-lnmp \"Docker LNMP\") no Github.\n\nOs arquivos de configuração são simples e autoexplicativos.\n\nEfetue o clone do projeto, ou apenas baixe o conteúdo como Zip.\nPara rodar o seu projeto, bastará copiar os arquivos abaixo listados, para a raiz do seu projeto.\n\nArquivos necessários:\n- app.docker\n- docker-compose.yml\n- host.conf\n- web.docker\n\nAcesse o diretório do seu projeto através do terminal e execute o seguinte comando:\n\n    docker-compose up\n\nVisualize o projeto pelo browser em:\n\n    http://localhost\n\n","tags":["macos","stack","desenvolvimento","lnmp","docker"],"categories":["blog"]},{"title":"Instalando o Node.js no Ubuntu 17","url":"/blog/2017/10/05/instalando-o-nodejs-no-ubuntu-17/","content":"Instalar o **Node.js** no **Ubuntu 17** é extremamente simples.\n\nÉ bastante comum, que você encontre instruções nos mais diversos sites, que indiquem que você deve instalar o Node.js a partir do repositório do APT.\nPorém, o que ocorre, é que ao instalar o Node.js a partir desta fonte, fará com que você instale a versão mais antiga e estável suportada.\n\nCaso deseje fazer um simples teste, basta executar:\n\n\tsudo apt-get install nodejs -y\n\nAo instalar o Node, você poderá verificar que a versão que será instalada, é a v4.7.2.\n\nExecute:\n\n\t$ nodejs -v\n\nE o retorno será:\n\n\tv4.7.2\n\nIsto ocorre, pois conforme já mencionado anteriormente, é instalada a versão mais antiga e estável suportada, algo que é conhecido como **Long Term Support (LTS)**.\n\nCaso deseje ver mais sobre as versões do Node.js, consulte: [https://nodejs.org/en/download/releases/](https://nodejs.org/en/download/releases/).\n\n## Instalando a versão mais recente no Node.js\n\nPara instalar a versão mais recente do Node.js, você pode simplesmente adicionar o **PPA (arquivo de pacotes pessoais)** do NodeSource.\n\nPara into, basta seguir os seguintes passos:\n\n\tcd ~\n\tcurl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -\n\tsudo apt-get install -y nodejs\n\nApós a instalação, você terá à disposição o comando **node** e o seu alias **nodejs**.\n\nSe desejar consultar a versão, bastará executar:\n\n\t$ nodejs -v\n\nQue neste momento, resultará em:\n\n\tv8.6.0\n\nAgora você possui o **Node.js** instalado e pronto para usar, assim como o gerenciador de pacotes **npm**, que também foi instalado.\n\n","tags":["nodejs","npm","terminal","ubuntu"],"categories":["blog"]},{"title":"Núvem descentralizada com Storj","url":"/blog/2017/09/21/nuvem-descentralizada-com-storj/","content":"\n## O que é o Storj?\nO **Storj** é um sistema de armazenamento de arquivos distribuídos, **peer-to-peer** (**P2P**), desenvolvido e mantido pela Storj Labs.\nO Storj utiliza criptografia de última geração, de ponta a ponta e a tecnologia **Blockchain** do **Ethereum**.\n\n## Para que serve o Storj?\nO Storj fornece uma alternativa às tradicionais soluções de armazenamento em nuvem, ao criar uma núvem de arquivos distribuída e descentralizada, que alia segura e alto desempenho para armazenar seus arquivos à um preço economicamente viável.\n\n## Como funciona o Storj?\nDiferente de outros sistemas de Storage, o Storj não utiliza servidores em Data Centers, mas sim, os computadores dos usuários que fazem parte de rede e cedem espaço de armazenamento.\n\nO Storj ainda não possui uma ferramentas de sincronização automática, como possuem outros serviços como Dropbox, Google Drive, iCloud, OneDrive, etc.\n\nNo momento, é possível, por exemplo, enviar e acessar seus arquivos através do software **FileZilla**, um dos, ou senão o primeiro à suportar o protocolo do Storj.\n\nAlém de possuir seus códigos disponíveis para acesso público em seu [Github](https://github.com/storj), o Storj também oferece uma **API** de integração, para que qualquer um possa desenvolver suas próprias soluções ou ferramentas.\n\n## Quanto custa o armazenamento na núvem com o Storj?\nAtualmente, o preço por GB armazenado, é de **$0.015**, enquanto que a banda de transferência, é de **$0.05** por GB baixado.\nEm um cálculo rápido, isso significa que o armazenamento de 50 GB, custaria em torno de $0.75/mês (não contando a banda de download)\n\n## Alugando seu espaço em disco para a núvem do Storj\nO ponto chave do Storj, são os **Farmers** (agricultores), que são os usuários que disponibilizam (mediante aluguel) porções do seu espaço em disco rígido, para outros usuários ou clientes do Storj.\n\nPara compartihar seu espaço em disco, basta se inscrever no Storj: [https://app.storj.io/login#/signup?referralLink=racegoers-cervicography-610](https://app.storj.io/login#/signup?referralLink=racegoers-cervicography-610).\n\nApós feita a inscrição, basta você baixar e instalar o GUI de Compartilhamento, através do link: [https://storj.io/share.html](https://storj.io/share.html).\n\n## Gratuíto por 12 meses\nNovos usuários, podem utilizar o Storj gratuitamente, nos primeiros de 12 meses, contanto que não ultrapassem o limite de armazenamento de 25 GB/mês.","tags":["ethereum","blockchain","storj","nuvem","p2p","eth","filezilla"],"categories":["blog"]},{"title":"Assistindo vídeos em modo PiP no macOS Sierra","url":"/blog/2017/08/12/assistindo-videos-em-modo-pip-no-macos-sierra/","content":"\nO modo **PiP**, ou **Picture in Picture**, é um recurso que lhe possibilita assistir à uma segunda imagem em uma pequena janela, na sua tela atual.\n\nPopular e disponível em Smart TVs mais modernas, onde é possível assistir à uma transmissão de TV aberta em uma pequena janela, enquanto assiste à algo na \"tela grande\", vindo da HDMI ou vice-versa.\n\nÀ partir da versão 10.12 do macOS, este recurso passou à estar disponível tambem no Mac, porém apenas dentro do navegador **Safari**.\n\nCom este recurso, é possível desacoplar a transmissão de um vídeo do YouTube, por exemplo, passando à liberar o seu navegador da necessidade de ficar visível na tela o tempo todo.\n\n## Assistindo vídeo em uma tela em separado\n\nPara utilizar o modo **PiP** nativo do macOS, não é necessário instalar absolutamente nada!\n\nUma vez que a sua nova tela esteja aberta, você poderá:\n* Ajusta o tamanho da janela (limitado à um tamanho mínimo e máximo)\n* Posicionar a janela do PiP em um dos 4 cantos da sua tela\n\n### Assistindo YouTube em modo PiP no macOS Sierra\n\nPara ativar o PiP, enquanto assiste à um vídeo do YouTube, faça o seguinte:\n* Clique com o botão direito do Magic Mouse/Trackpad sobre a área do vídeo.\n* Neste momento, um menu de contexto do próprio YouTube é aberto, **não acesse este menu** e pressione uma segunda vez o botão direito do Magic Mouse/Trackpad.\n* Novo menu que se abre, basta selecionar a opção \"Entrar no Modo PiP\"\n\nSimples assim.\n\n### Assistindo Netflix em modo PiP no macOS Sierra\n\nInfelizmente o modo PiP não esta disponível nativamente em todos os tipos de transmissões de Vídeo.\nÉ ai que entra uma segunda opção, que é a utilização da Extensão para Safari chamada **PiPifier**.\nCom o PiPifier, você poderá assistir à todo e qualquer vídeo compatível com **HTML 5**, que ainda não suporte o modo PiP nativo do macOS.\n\n### Instalando o PiPifier\n\nO **PiPifier** pode ser baixado gratuitamente na App Store [neste link](https://itunes.apple.com/us/app/pipifier-pip-for-nearly-every/id1160374471?mt=12&at=10l3Vy&ct=UUimUdUnU41163 \"Download do PiPifier\").\nUma vez que a instalação do PiPifier esteja concluída, siga os passos abaixo para habilitá-lo.\n\nConfigure/habilite o PiPifier:\n* Abra o Safari\n* No menu \"Safari\", selecione \"Preferências\"\n* Vá para a guia \"Extensões\"\n* Na lateral esquerda, selecione/marque o \"PiPifier Button\"\n* Feche esta janela\n* No menu \"Visualizar\", do Safari, selecione \"Personalizar Barra de Ferramentas\"\n* Selecione o botão do \"PiPifier\" e arraste para a sua barra de ferramentas\n* Feche esta janela\n\nAgora, ao acessar qualquer site, quando uma transmissão de vídeo em formato HTML 5 estiver disponível, o botão do PiPifier mudará do status \"desabilitado\" (em cinza claro), para \"habilitado\" (na cor preta).\nBasta clicar neste botão e o seu vídeo será separado em uma 2ª janela.\n","tags":["macos","pip","netflix","youtube"],"categories":["blog"]},{"title":"Migrando do gerador de sites estáticos Jekyll para Hexo","url":"/blog/2017/07/27/migrando-do-gerador-de-sites-estaticos-jekyll-para-hexo/","content":"Em suas primeiras versões, este site havia sido desenvolvido em Wordpress, porém com o passar do tempo e do advento dos geradores de sites estáticos, optou-se por migrar do **Wordpress** para o **Jekyl** e agora, do Jekyl para o **Hexo**.\n\n## Jekyl\n\nO Jekyl é um gerador de sites estáticos, bastante rápido, escrito em Ruby e é também, o gerador \"oficial\" utilizado no [GitHub Pages](https://pages.github.com/ \"GitHub Pages\"), motivo principal que levou esta página à ser migrada para ele inicialmente.\n\n## Hexo\n\nO Hexo, assim como o **Jekyl**, também é um gerador de sites estáticos, porém este é escrito em **Nodejs**. Bastante semelhante ao Jekyl em funcionalidade, efetuar esta migração é um passo bastante simples, sendo necessário tomar cuidado apenas com pequenos detalhes.\n\n## Instalando o Hexo\n\nAcesse o Terminal e execute o seguinte comando:\n\n    $npm install hexo-cli -g\n\nPara maiores esclarecimentos sobre a instalação, você pode acessar a documentação no site do [Hexo](https://hexo.io/docs/ \"Hexo\").\n\n## Migrando do Jekyl para o Hexo\n\nCrie um novo projeto com o Hexo:\n\n    $hexo init <nome-do-projeto>\n    $cd <nome-do-projeto>\n    $npm install\n\nLembrando que **nome-do-projeto**, deve ser substituido pelo nome do seu projeto.\n\nUma vez que este procedimento estiver concluído, configure o seu projeto, editando o arquivo **_config.yml** que se encontra na raiz do diretório **nome-do-projeto**.\n\nEste arquivo de configuração é bastante intuitívo e segue o padrão de qualquel YAML.\n\nDefina os valores para as principais **tags** como **title**, **description** e **author**. Defina **language** com o valor *pt-BR*, a URL seu site em **url** e ajuste os padrões de data e hora em **date_format**, com *DD/MM/YYY* e **time_format** com *HH:mm:ss*, respectivamente.\n\n### Migrando os Posts\n\nPara migrar os Posts, basta copiar os arquivos de post do Jekyll, que estão na pasta **_posts** e no formato Markdown (\\*.md), para a pasta **source/_posts/** do **Hexo**.\n\nVolte para o seu arquivo de configuração (**_config.yml**) e ajuste o valor da **tag**, **new_post_name** para utilizar o mesmo padrão que você possuia no Jekyll. No meu caso, o valor definido foi **blog/:title.md**, pois meus posts ficam todos no subdiretório **blog** e possuem como URL, apenas o **título**.\n\n## Gerando os arquivos estáticos\n\nPara gerar as páginas estáticas do Hexo, basta executar o comando:\n\n    $hexo generate\n\nEste procedimento irá processar todos os seus arquivos .md e irá gerar os devidos arquivos para cada um dos Posts, irá também, gerar a paginação, arquivos (indice de posts) e tags, caso você às utilize.\n\nO generate também se encarrega de copiar quaisquer arquivos estáticos, como *assets* da pasta source, para a pasta de destino, no diretório **public**.\n\nLembre-se de não efetuar qualquer alteração no conteúdo dos arquivos do diretório **public**, pois sempre que o **generate** é executado, estes conteúdos são sustituídos/atualizados, com base no conteúdo do diretório **source** e do resultado de geração das páginas estáticas.\n\n## Servindo as páginas estáticas\n\nPara servir as páginas estáticas do Hexo, você pode utilizar o próprio Hexo, bastando executar o comando:\n\n    $hexo serve\n\nAssim, você poderá acessar o [http://localhost:4000](http://localhost:4000 \"http://localhost:4000\") para navegar e visualizar o seu site.\n\n## Fazendo o deploy\n\nO Hexo provê um sistema bastante simples e efetivo para efetuar o deploy.\n\nPara que você possa fazer o deploy via git, por exemplo, você deverá adicionar ao arquivo **_config.yml**, as seguintes informações:\n\n    deploy:\n        type: git\n        repo: <url-do-repositorio.git>\n        branch: <nome-do-branch-normalmente-master>\n\nFeita esta configuração, não se esqueça de efetuar a instalação do plugin de deploy, com o comando:\n\n    $npm install hexo-deployer-git --save\n\nEnfim, para efetuar o deploy, execute o comando:\n\n    $hexo deploy\n\nCaso você ainda possua dúvidas, não deixe de consulta a seção de [Deployment](https://hexo.io/docs/deployment.html \"Deployment\") na documentação.\n\n## GitHub Pages\n\nPara que você possa utilizar o **Hexo** no [GitHub Pages](https://pages.github.com/ \"GitHub Pages\"), será necessário mais alguns passos.\n\n### Crie um Branch para os Fontes!\n\nPara que você possa publicar o seu site no **GitHub Pages**, você deverá criar um novo branch para os fontes do seu projeto, deixando o branch **master**, apenas para o site gerado através do comando **hexo deploy**, isto por que atualmente o GitHub Pages, só serve os sites estáticos à partir do branch **master**.\n\nNo meu caso:\n    Criei um repositório git\n    Criei um branch **source**\n    Criei o projeto do **hexo** neste branch **source**\n    Efetuo **git add**, **commit** e **push** apenas neste branch\n    Deixo o branch **master** nas mãos do **hexo deploy**\n\n### CNAME\n\nCaso você esteja apontando o seu domínio para o GitHub Pages, é bem provável que você já possui um CNAME configurado.\n\nSe não sabe o que é isto, verifique artigo [utilizando um domínio customizado com o github pages](https://help.github.com/articles/using-a-custom-domain-with-github-pages/ \"utilizando um domínio customizado com o github pages\").\n\nPara que você possa manter as configurações do CNAME funcionais, será necessário copiar o seu arquivo **CNAME** para a raiz da pasta **souce**.\n\n## Adicionando e Gerando Posts\n\nPassados os passos anteriores, o fluxo de utilização do Hexo será o seguinte:\n\n### Criando um novo Post:\n\n    $ hexo new post <titulo-do-post>\n\nEdite o arquivo source/_posts/titulo-do-post.md\n\n### Gerando e visualizando as páginas:\n\n    $ hexo generate\n    $ hexo serve\n\nAcesse o link [http://localhost:4000](http://localhost:4000 \"http://localhost:4000\")\n\n### Efetuando o deploy\n\n    $hexo deploy","tags":["nodejs","ruby","site","wordpress","estatico","gerador","jekyll","hexo"]},{"title":"Unindo um SSD com um HD e criando um Fusion Drive no Mac","url":"/blog/2017/07/03/unindo-um-ssd-com-um-hd-e-criando-um-fusion-drive-no-mac/","content":"Após a adição de um segundo HD ao MacBook Pro mid 2011, o qual você pode ver o passo a passo em [Instalando um segundo HD em um MacBook Pro mid 2011](http://www.maiconschmitz.com.br/blog/2017/04/28/instalando-2-hd-em-macbook-pro-mid-2011 \"Instalando um segundo HD em um MacBook Pro mid 2011\"), uma opção, é efetuar a criação de um **Fusion Drive**.\n\nO **Fusion Drive**, é um recurso disponível nas versões mais recentes do macOS, que possibilita efetuar a junção de um ou mais discos, da tal forma à lhe disponibilizar apenas um **volume virtual**.\n\nAssim, é possível juntar 2 SSDs de tamanhos diferentes em apenas um volume aparente, ou então um SSD e um HDD (HD).\nAo efetuar a junção de um SSD com um HD, você terá os benefícios da velocidade do SSD, com a capacidade de armazenamento do HD.\nO macOS irá gerenciar o uso deste volume, da melhor forma possível, mantendo arquivos que são mais acessados no SSD, enquanto arquivos que são menos requisitados, serão mantidos no HD. Tudo isso se dá de forma transparente para o usuário, onde o macOS irá mover os arquivos de um disco para o outro, conforme necessário e nenhuma ação da parte do usuário se fará necessária, uma vez que aparentemente, existirá apenas um único volume visível.\n\nNeste procedimento que apresento agora, demonstro como juntar um SSD com um HD, resultando em um Fusion Drive, o qual utilizei posteriormente, para efetuar a [Instalação Limpa do macOS Sierra](http://www.maiconschmitz.com.br/blog/2017/06/02/instalacao-limpa-do-mac-os-sierra \"Instalação Limpa do macOS Sierra\").\n\n## Criando o Fusion Drive\n\n**Atenção:** Criar um Fusion Drive, fará com que todo o conteúdo dos discos selecionados para a criação do Fusion Drive sejam perdidos/apagados. \n\nReinicie, ou ligue o Mac, mantendo a tecla \"Option\" pressionada.\n\nApós o carregamento da interface, selecione a opção de menu \"Utilitários\" / \"Terminal\".\n\nCom o Terminal aberto, execute o comando \"**diskutil list**\", para obter uma lista de discos disponíveis:\n\n\t$diskutil list\n\nEste comando irá listar todos os discos, volumes e dispositivos existentes no seu Mac.\nOs principais, à serem observados, são os iniciais com caminhos como: **dev/disk0**, **dev/disk1**, **dev/disk2**, etc.\nObserve que estes volumes, são os mesmos referentes aos tamanhos do seu SSD, HD, Pendrive/SD (se algum estiver conectado), etc.\n\nVerifique o caminho dos discos que deseja \"juntar\" e execute o comando de criação do Fusion Drive.\n\n    $diskutil coreStorage create 'Fusion' /dev/disk0 /dev/disk1\n\nNo comando acima, defini o nome do meu novo 'disco' como 'Fusion' e juntei os meus 2 primeiros discos, os quais são respectivamente /dev/disk0 e /dev/disk1, sendo disk0 o SSD e disk1, o meu HD.\n\nApós alguns instantes, o processo será concluído.\nObserve o resultado que será impresso no Terminal.\nAtente para uma das linhas finais, iniciada com: **Core Storage LVG UUID:**.\nAnote o UUID (conteúdo após o :, com estrutura semelhante à: XXXXXX-XXX-XXX-XXXXXX), pois ele será utilizado no comando em seguida:\n\n    $diskutil coreStorage createVolume XXXXXX-XXX-XXX-XXXXXX jhfs+ 'Fusion' 100%\n\nNo comando acima, XXXXXX-XXX-XXX-XXXXXX deve ser substituído pelo UUID que você copiou do resultado de execução do comando **diskutil coreStorage create ...**.\nO restante dos parâmetros deve ser mantido como no comando original.\n\nNovamente, após alguns instantes, o processo será concluído.\nDeste ponto em diante, o seu novo **volume virtual** já está criado e pronto para uso.\nAgora o seu Mac poderá desfrutar da velocidade do SSD e da capacidade de armazenamento do HD, tudo em um único volume.","tags":["mac-os-x","macos","ssd","hdd","hd","fusion","drive"],"categories":["blog"]},{"title":"Instalação Limpa do macOS Sierra","url":"/blog/2017/06/02/instalacao-limpa-do-mac-os-sierra/","content":"Neste procedimento, irei detalhar como efetuar a instalação limpa do macOS Sierra.\n\nCom o OS X/macOS ainda em funcionamento, efetue o download da Instalação do **macOS Sierra** através da **Mac App Store**.\n\nQuando o download estiver concluído, cancele o processo de instalação.\n\nConecte um Disco, PenDrive ou Cartão SD, de no mínimo 8 GB ao Mac.\n\nAcesse o \"Utilitário de Disco\" pelo **Spotlight** ou através do diretório \"/Applications/\".\n\nEstando no \"Utilitário de Disco\", selecione o Dispositivo, na lista de Drives e clique sobre a aba \"Apagar\".\n\nEm \"Formato\" selecione a opção \"Mac OS Expandido (Reg. Cronológico)\" e em \"Nome\", defina o nome para \"MACOS\".\n\nFeito isto, clique no botão \"Apagar...\".\n\nQuando a formatação estiver concluída, feche o \"Utilitário de Disco\".\n\nAcesse o \"Terminal\" pelo **Spotlight** ou através do diretório \"/Applications/\".\n\nExecute o seguinte comando:\n\n\tsudo /Applications/Install\\ macOS\\ Sierra.app/Contents/Resources/createinstallmedia --volume /Volumes/MACOS --applicationpath /Applications/Install\\ macOS\\ Sierra.app --nointeraction\n\n\nO processo de cópia será efetuado e a seguinte mensagem será exibida:\n\n\tErasing Disk: 0%... 10%... 20%... 30%...100%...\n\tCopying installer files to disk...\n\tCopy complete.\n\tMaking disk bootable...\n\tCopying boot files...\n\tCopy complete.\n\tDone.\n\n\n## Hora da Instalação\n\nCom o Dispositivo conectado ao Mac, reinicie, ou ligue-o, mantendo a tecla \"Option\" pressionada.\n\nApós o carregamento, deverá ser exibida uma \"lista\", na qual você deverá selecionar o dispositivo para o qual copiou a instalação.\n\nDeste ponto em diante, você possui duas opções:\n\n* Instalar o macOS\n* Reinstalar o macOS\n\nOs processos de Instalar e Reinstalar o macOS, são praticamente os mesmos, com a diferença de a reinstalação manter seus arquivos, programas e algumas configuração, enquanto a instalação limpa, obviamente irá lhe obrigar à reconfigurar e instalar novamente todos os seus programas, serviços, etc...\n\n## Instalar o macOS\n### Instalaçao Limpa do macOS\n\n* Selecione o \"Utilitário de Disco\" e escolha a opção \"Continuar\".\n* Selecione o \"Disco Principal\" e clique na opção \"Apagar\", no topo da janela.\n\t* Defina um nome para o Disco, exemplo: \"Sierra\"\n\t* Em Formato, mantenha a opção: \"OS X Expandido (Reg. Cronológico)\"\n\t* E em Esquema, mantenha \"Mapa de Partição GUID\".\n\t* Confirme as opções acima, clicando em \"Apagar\".\n* Aguarde e conclusão do processo.\n* Feche o \"Utilitário de Disco\".\n* Prossiga com uma instalação do zero...\n\n## Reinstalar o macOS\n\nBastará selecionar a opção \"Reinstalar macOS\" e escolher a opção \"Continuar\".\n","tags":["mac-os-x","macos"],"categories":["blog"]},{"title":"Instalando um segundo HD em um MacBook Pro mid 2011","url":"/blog/2017/04/28/instalando-2-hd-em-macbook-pro-mid-2011/","content":"\nFaz algum tempo, efetuei um upgrade em um MacBook Pro de 2011, [substituindo um HD magnético por um SSD](http://www.maiconschmitz.com.br/blog/2015/11/11/instalando-ssd-em-macbook-pro-mid-2011 \"Substituindo um HD magnético por um SSD\").\n\nEste procedimento que apresento hoje, é semelhante à substituição do HD por SSD, porém visa remover o Drive Óptico (Leitor/Gravador de CD/DVD) e substituí-lo por um segundo HD ou SSD.\n\nPara que você possa fazer isto, será necessário antes de mais nada, que você adquira um **adaptador/suporte**, o qual é comumente conhecido por **Caddy**\n\nSe desejar, pode comprar o [2nd 9.5mm SATA HDD SSD Hard Drive Caddy Bay for MacBook Pro 13 15 17](http://www.dx.com/p/designer-s-2-5-sata-to-sata-hdd-ssd-caddy-for-12-7mm-optical-drive-122075?Utm_rid=70879913&Utm_source=affiliate \"2nd 9.5mm SATA HDD SSD Hard Drive Caddy Bay for MacBook Pro\"), que é compatível com diversos modelos.\n\nSe o Drive Óptico ainda for importante para você, você poderá adquirir um adaptador que converte o mesmo, em um Drive Óptico Externo. Para isto, você deverá adquirir o [IDE / SATA to USB Converting DVD-RW Drive Box Enclosure for Laptops - Silvery White + Black\"](http://www.dx.com/p/01-ide-sata-to-usb-converting-dvd-rw-drive-box-for-laptops-silvery-white-black-200369?Utm_rid=70879913&Utm_source=affiliate \"IDE / SATA to USB Converting DVD-RW Drive Box Enclosure for Laptops - Silvery White + Black\").\n\n## Substituindo o hardware\n\nO procedimento é bastante simples e consiste do seguinte passo-a-passo:\n\n* Com o MacBook Pro desligado, posicione-o de cabeça para baixo, sobre uma superfície plana\n* Remova os **parafusos**, são **10** no total (4 no topo, 1 em cada lateral e 4 na parte inferior)\n* Ao remover os parafusos, posicione-os de forma organizada, para que possa recoloca-los posteriormente, na mesma ordem.\n* Remova a tampa de alumínio\n* Na lateral direita, você encontrará seu **Drive Óptico**\n* Remova os parafusos e desconecte o **cabo flat**\n* Fixe o seu HD ou SSD secundário do **Caddy**\n* Insira o Caddy no lugar do antigo **Drive Óptico**, conectando o cabo flat e fixando os parafusos\n* Feche a tampa e prenda os parafusos novamente\n\n\n## Usando o novo disco\n\nEste passo não é obrigatório e é indicado apenas para disco novos e quando os dados do disco antigo não são mais necessários...\n\nApós iniciar o OS X/macOS\n\n* No menu Utilitários, acesse o **Utilitário de Disco**\n* Selecione o seu Disco, na lateral esquerda e clique na opção Apagar\n* Defina o nome como **HD**, em formato selecione **OS X Expandido (Reg. Cronológico)** e em Esquema, selecione **Mapa de Partição GUID**\n* Clique em Apagar\n\nPronto, agora o seu Mac terá mais espaço disponível com este segundo disco de armazenamento.","tags":["mac-os-x","macos","ssd","hd"],"categories":["blog"]},{"title":"Gerando QR Code de uma URL no Google Chrome","url":"/blog/2017/03/30/gerando-qr-code-de-url-no-google-chrome/","content":"\nCódigos QR (QR Codes) já não são uma novidade e talvez nem sejam tão utilizados quanto o esperado, mas existem casos em que quando bem aplicados, ajudam e facilitam diversas tarefas, como publicar dados de acesso à uma rede Wi-Fi (mentira) e tornar URL's mais faceis de serem acessadas em dispositivos móveis.\n\nFoi pensando em tornar o acesso às URL's mais fácil em dispositivos móveis, que o QRCode URL foi criado.\nA idéia que motivou a criação de tal extensão, foi a possibilidade de simplificar o acesso à URL's mais longas e complexas, como por exemplo, de páginas em desenvolvimento, em dispositivos móveis, para fins de teste de desenvolvimento.\n\n## QRCode URL\n\nO QRCode URL é uma extensão para o navegado Google Chrome, que lhe permite gerar um Código QR (QR Code) a partir da URL que se encontra atualmente aberta no navegador.\nIsto lhe permite acessar esta URL rapidamente a partir de outros dispositivos munidos de uma câmera e um aplicativo leitor de Códigos QR.\n\nEsta extensão é extremamente simples, funciona de modo offline e nenhum dado é enviado para a nuvem.\n\nPublicada originalmente em sua versão 0.0.0.2, em 30 de março de 2017.\n\nCaso seja de seu interesse, você pode efetuar o [Download da Extensão QRCode URL](https://bit.ly/3Km66qj) para o seu Google Chrome.","tags":["chrome","qrcode","extensao"],"categories":["blog"]},{"title":"Login Error RAC0218 - The maximum number of user sessions is reached","url":"/blog/2016/07/02/login-error-rac0218-the-maximum-number-of-user-sessions-is-reached/","content":"\nPublicado originalmente em 15/07/2015, com reedição em 02/07/2016 para adicionar possibilidades extras.\n\nAs vezes, ao tentar acessar o iDrac, através da interface Web, é possível que você se depare com uma mensagem semelhante à esta:\n\n~~~ shell\n...Login Error RAC0218: The maximum number of user sessions is reached....\n~~~\n\nEsta mensagem é exibida, devido ao fato do iDrac já ter atingido o limite no número de sessões, ou, por algum bug, caso seu iDrac não esteja 100% atualizado.\n\nPara resolver este problema, você deve resetar o iDrac.\n\n## Resetando o iDrac\nPara resetar o iDrac, você deve se conectar ao mesmo através do SSH:\n\n\tAcesse o iDrac via SSH\n\tExecute o comando: racadm racreset\n\nCaso o a acesso via SSH lhe retorne uma mensagem semelhante à esta:\n\n\tNo more sessions are available for this type of connection!\n\nEntão você deverá resetar o iDrac de outra forma:\n\n\tLocalize no painel do iDrac (no hardware físico), o botão 'i'.\n\tPressione o botão por 30 segundos e após isto, solte-o\n\tO iDrac (apenas o iDrac e não o equipamento) será reiniciado\n\tA Fan do equipamento irá aumentar a sua rotação momentaneamente (não se assunte)\n\tApós alguns segundos, a Fan irá voltar para a rotação original e o iDrac estará reiniciado, mantendo a mesma configuração e IP de rede.\n\nEm último caso, caso o item anterior não funcione, você poderá optar por desligar completamente o equipamento.\n\nDesligue e desconecte o equipamento da energia elétrica (reiniciar não basta).\n\nLigue tudo novamente e ao concluir a inicialização, o iDrac estará funcionando normalmente.","tags":["ssh","idrac"],"categories":["blog"]},{"title":"Iniciando com Docker no OS X","url":"/blog/2016/05/21/iniciando-com-docker-no-os-x/","content":"Abaixo irei detalhar a forma mais fácil de iniciar o uso do Docker no OS X.\n\nO **Docker**, para quem não conhece, é uma plataforma Open Source, utilizada para empacotar aplicações e/ou ambientes inteiros, dentro de containers, que podem ser portados para outros Hosts (Máquinas).\n\nAtualmente, o Docker possui uma ferramenta gráfica chamada **Kitematic** em estágio Beta, que permite baixar, instalar e gerenciar containers, de uma forma extremamente simples!\n\nPara instalar o Kitematic, basta efetuar o download do [Docker Toolbox](https://www.docker.com/products/docker-toolbox), o qual possui além do Kitematic, o Docker Engine, o Compose e o Machine.\n\nUm pré requisito para o Docker, é a necessidade de possuir alguma ferramenta para virtualização, neste caso, pode-se optar pelo **VirtualBox**.\n\nCaso você não possua o VirtualBox, efetue o [Download](https://www.virtualbox.org/wiki/Downloads) e posteriormente a instalação do mesmo.\n\n## Docker Toolbox\n\nContinuando com o Docker Toolbox, efetue o [Download](https://www.docker.com/products/docker-toolbox) e quando o mesmo estiver concluído, efetue a instalação seguindo o passo-a-passo do instalador, ou consulte os passos no [guia oficial](https://docs.docker.com/mac/step_one/).\n\nCom a instalação concluída, execute o Kitematic, a interface é bastante simples e intuitiva.\n","tags":["mac-os-x","macos","terminal","pendrive","docker","app-store"],"categories":["blog"]},{"title":"Exibindo Notificações Desktop via Shell script","url":"/blog/2016/03/30/exibindo-notificacoes-desktop-via-shell-script/","content":"\nO **Shell script** é uma linguagem de script, usada nos mais diversos sistemas operacionais, mas o mundo **GNU/Linux** é que é a sua casa.\n\nPoderoso e flexível, o **Shell script** lhe permiter fazer praticamente qualquer coisa que seria possível de ser feita via terminal, incluindo aí, exibir notificações diretamente no Desktop.\n\nNeste post, exemplifico de forma rápida, como exibir Notificações no Desktop, para os ambientes gráficos do [Unity](https://unity.ubuntu.com/) (Ubuntu) e do KDE, bem como no OS X.\n\n\n## Linux\n\nExibir as notificações no Unity e no KDE, é bastante simples, uma vez que ambos ambientes gráficos, já oferecem ferramentas para exibir tais notificações.\n\n\n### Notificação no Ubuntu\n\nNo Ubuntu, temos disponível o **notify-send**\n\nExemplo de uso:\n\n~~~ shell\nnotify-send \"Mensagem\"\n~~~\n\n### Notificação no KDE\n\nNo KDE, temos disponível o **kdialog**\n\nExemplo de uso:\n\n~~~ shell\nkdialog --title \"Mensagem\"\n~~~\n\n## OS X\n\nPara que as Notificações via Shell possam ser exibidas no Desktop do OS X, é necessário utilizar o Growl ou a Central de Notificações, nativa a partir do Mountain Lion.\n\n\n### Notificação no Mac OS X Mountain Lion ou superior\n\nA notificação no OS X Mountain Lion ou mais recente, se utiliza da Central de Notificações e para utiliza-la, precisamos do Terminal Notifier, um wrapper escrito em Ruby e disponível no RubyGems.\n\n\n#### Instalando o Terminal Notifier\n\nVocê pode instalar o wrapper via [Homebrew](https://github.com/Homebrew/homebrew):\n\n~~~ shell\n$ brew install terminal-notifier\n~~~\n\nCaso você não possua o HomeBrew instalado, pode verificar [aqui, como Instalar o HomeBrew](http://www.maiconschmitz.com.br/blog/2015/01/09/instalando-o-gerenciador-de-pacotes-brew).\n\nOu, caso deseje utilizar o mesmo também via [Ruby](https://github.com/alloy/terminal-notifier/tree/master/Ruby), efetue a instalação via RubyGems:\n\n~~~ shell\n$ [sudo] gem install terminal-notifier\n~~~\n\nUma vez que o Terminal Notifier esteja instalado, você terá a sua disposição o **terminal-notifier**.\n\nExemplo de uso:\n\n~~~ shell\nterminal-notifier -message \"Mensagem\" -title \"Titulo\"\n~~~\n\n### Notificação no Mac OS X, anterior ao Mountain Lion\n\nEm versões anteriores ao Mac OS X Mountain Lion, onde a Central de Notificações ainda não existia, também é possível utilizar notificações no Desktop.\nNeste caso porém, será necessário utilizar uma ferramenta adicional, o Growl.\n\n\n#### Notificação com Growl\n\nO Growl é um software livre, utilizado para exibir notificação no Mac OS X.\n\n\n#### Instalando o Growl\n\nPara instalar o Growl, basta visitar a página de [Download do Growl](http://growl.info/downloads)\n\n#### Exibindo notificação\n\nUma vez que o Growl esteja instalado, você terá a sua disposição o **growlnotify**.\n\nExemplo de uso:\n\n~~~ shell\n/usr/local/bin/growlnotify Titulo -m 'Mensagem'\n~~~\n","tags":["mac-os-x","macos","terminal","shellscript"],"categories":["blog"]},{"title":"Comunicando Raspberry Pi com Arduino via USB (Serial)","url":"/blog/2016/02/29/comunicando-raspberry-pi-arduino-usb/","content":"\nUmas das formas mais simples de comunicar o **Raspberry Pi** com **Arduino**, onde uma conexão física é possível, é através da comunicação Serial.\n\nÉ possível conectar o Raspberry Pi e o Arduino através da **GPIO**, nas portas **RX** e **TX**, porém uma forma mais simples ainda, de fazer tal conexão, é utilizando a própria porta **USB** de ambos os dispositivos.\n\nPara efetuar tal conexão, pode-se utilizar o próprio cabo do Arduino, ou então um Cabo USB 2.0 com conectores Macho \"A\" e Macho \"B\", de uso comum em impressoras.\n\n## Arduino\n\n<iframe sandbox=\"allow-popups allow-scripts allow-modals allow-forms allow-same-origin\" style=\"width:120px;height:240px;\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" frameborder=\"0\" src=\"//ws-na.amazon-adsystem.com/widgets/q?ServiceVersion=20070822&OneJS=1&Operation=GetAdHtml&MarketPlace=BR&source=ss&ref=as_ss_li_til&ad_type=product_link&tracking_id=schmitz-20&language=pt_BR&marketplace=amazon&region=BR&placement=8575224042&asins=8575224042&linkId=da1857cf81595d2ebdb1d94a049bba4d&show_border=true&link_opens_in_new_window=true\"></iframe>\n\nPara testar tal conexão, abra a IDE do Arduino e crie um novo projeto, com o seguinte código:\n\n~~~ c\nvoid setup() {\n  Serial.begin(9600);\n}\n\nvoid loop() {\n  delay(5000);\n  Serial.println(\"COMUNICACAO SERIAL VIA USB\");\n}\n~~~\n\nFeito isto, carregue esta Sketch para o Arduino.\n\n## Raspberry Pi\n\n| Raspberry Pi 3  | Raspberry Pi 4  |\n| --------------- |:---------------:|\n| <a href=\"https://www.amazon.com.br/gp/product/B01CD5VC92?ie=UTF8&linkCode=li2&tag=schmitz-20&linkId=4f2021a2a4c1b0a33eec617fd9541a9a&language=pt_BR&ref_=as_li_ss_il\" target=\"_blank\"><img border=\"0\" src=\"//ws-na.amazon-adsystem.com/widgets/q?_encoding=UTF8&ASIN=B01CD5VC92&Format=_SL160_&ID=AsinImage&MarketPlace=BR&ServiceVersion=20070822&WS=1&tag=schmitz-20&language=pt_BR\" ></a><img src=\"https://ir-br.amazon-adsystem.com/e/ir?t=schmitz-20&language=pt_BR&l=li2&o=33&a=B01CD5VC92\" width=\"1\" height=\"1\" border=\"0\" alt=\"\" style=\"border:none !important; margin:0px !important;\" /> | <a href=\"https://www.amazon.com.br/gp/product/B07TC2BK1X?ie=UTF8&linkCode=li2&tag=schmitz-20&linkId=a1723e2362521127a480ceb4a9860096&language=pt_BR&ref_=as_li_ss_il\" target=\"_blank\"><img border=\"0\" src=\"//ws-na.amazon-adsystem.com/widgets/q?_encoding=UTF8&ASIN=B07TC2BK1X&Format=_SL160_&ID=AsinImage&MarketPlace=BR&ServiceVersion=20070822&WS=1&tag=schmitz-20&language=pt_BR\" ></a><img src=\"https://ir-br.amazon-adsystem.com/e/ir?t=schmitz-20&language=pt_BR&l=li2&o=33&a=B07TC2BK1X\" width=\"1\" height=\"1\" border=\"0\" alt=\"\" style=\"border:none !important; margin:0px !important;\" /> |\n\nNo Raspberry Pi, você irá primeiramente verificar qual é o endereço da porta USB.\n\nPara isto, com o cabo USB desconectado do RPi, execute o seguinte comando no terminal:\n\n\tls /dev/tty*\n\nAgora, conecte o cabo USB do Arduino ao RPi e execute o mesmo comando novamente, para verificar a nova porta que aparece na lista.\n\nNormalmente, a nova porta é a **ttyACM0**\n\nSendo, assim, crie um novo arquivo Python, com o seguinte código:\n\n~~~ python\nimport serial\ncomunicacaoSerial = serial.Serial('/dev/ttyACM0', 9600)\n\nwhile 1 :\n  print comunicacaoSerial.readline()\n~~~\n\nNo nosso exemplo, foi criado o arquivo **testeserial.py**\n\nAntes de rodar o projeto, não esqueça de instalar o pacote pySerial\n\n\t$sudo pip install pyserial\n\nPara testar, basta executar:\n\n\t$python testeserial.py\n\nSe tudo ocorrer sem erros, à cada 5 segundos, você verá a mensagem **COMUNICACAO SERIAL VIA USB** sendo impressa no Terminal, vindo diretamente do **Arduino**.\n\nAgora basta expandir seu projeto!\n","tags":["raspberry-pi","raspbian","arduino","usb"],"categories":["blog"]},{"title":"Fazendo Backup de Pendrives e Cartões SD no Mac OS X","url":"/blog/2015/12/23/fazendo-backup-de-pendrive-e-sd-no-mac-os-x/","content":"\nAo trabalhar com Pendrives e cartões SD, para testar distribuições à serem executadas no **Raspberry Pi**, por exemplo, pode ser útil, fazer cópias de segurança (backup) de imagens que você já tenha configurado, executado e atualizado.\n\nNeste caso, algo bastante útil e simples de ser feito, é efetuar uma cópia (criar uma imagem) do Pendrive ou Cartão SD, de tal forma que você possa recupera-la posteriormente, ou até então replicar para diversos Pendrives ou Cartões SD.\n\n<iframe sandbox=\"allow-popups allow-scripts allow-modals allow-forms allow-same-origin\" style=\"width:120px;height:240px;\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" frameborder=\"0\" src=\"//ws-na.amazon-adsystem.com/widgets/q?ServiceVersion=20070822&OneJS=1&Operation=GetAdHtml&MarketPlace=BR&source=ss&ref=as_ss_li_til&ad_type=product_link&tracking_id=schmitz-20&language=pt_BR&marketplace=amazon&region=BR&placement=B0749WVNYG&asins=B0749WVNYG&linkId=4b62d74b866d58ee7797c124507ef1bd&show_border=true&link_opens_in_new_window=true\"></iframe>\n\n## Efetuando a cópia...\n\nInsira o Pendrive ou Cartão SD no Mac\n\nAcesse o aplicativo Terminal.app, pelo Spotlight (⌘ + Tecla Espaço) ou diretamente através do diretório /Applications/Utilities/\n\nExecute o comando \"**diskutil list**\", para obter uma lista de discos disponíveis:\n\n\t$diskutil list\n\nO retorno do **diskutil list**, poderá ser semelhante à isto:\n\n\t/dev/disk0\n\t   #:                       TYPE NAME                    SIZE       IDENTIFIER\n       0:      GUID_partition_scheme                        *120.0 GB   disk0\n       1:                        EFI EFI                     209.7 MB   disk0s1\n       2:          Apple_CoreStorage OSX                     119.2 GB   disk0s2\n       3:                 Apple_Boot Recovery HD             650.0 MB   disk0s3\n    /dev/disk1 (internal, virtual):\n       #:                       TYPE NAME                    SIZE       IDENTIFIER\n       0:                  Apple_HFS OSX                    +118.8 GB   disk1\n                                 Logical Volume on disk0s2\n                                 B34DD1A2-6928-4216-9B11-76DDF772B04F\n                                 Unlocked Encrypted\n\t/dev/disk2\n\t   #:                       TYPE NAME                    SIZE       IDENTIFIER\n\t   0:     FDisk_partition_scheme                        *4.0 GB     disk2\n\t   1:                 DOS_FAT_32 RASPBPI                 4.0 GB     disk2s1\n\n\nIdentifique o disco relativo ao dispositivo, neste caso, é o /dev/disk2\n\nDesmonte o disco, com o comando \"**diskutil unmountDisk**\"\n\n\t$diskutil unmountDisk /dev/disk2\n\nUma vez que o disco esteja desmontado, você poderá acessa-lo e altera-lo diretamente.\n\nPara efetuar a cópia, iremos utilizar o utilitário **dd**, o qual já se encontra disponível no Mac OS X.\n\nPara saber mais sobre o dd, basta consultar o Manual, digitando \"**man dd**\" no Terminal.\n\nA sintaxe básica do dd é:\n\n\tdd if=origem of=destino\n\nSubstitua **origem** e **destino**, pelo disco de origem e pelo caminho e nome do arquivo de destino, respectivamente.\n\nO nome do arquivo de destino pode possuir qualquer nome e extensão, bem como pode ser salvo onde você bem entender, logo teremos algo semelhante à:\n\n\tdd if=/dev/rdisk2 of=~/imagens/2015-12-23-backup-raspbian.img bs=128m\n\nNote que, para acelerar o processo de cópia, complementamos o comando, definindo o parâmetro block size (bs) como 128m e alteramos o disco de destino incluindo um \"**r**\" antes de \"**disk2**\".\n\nO **bs** indica que os **blocos** de leitura e escrita devem possuir o mesmo tamanho, enquanto que o \"**r**\" define que o disco deve ser acessado no modo **raw**.\n\nQuando o processo de cópia for concluído, você receberá uma mensagem informando o tempo decorrido e a quantidade de bytes transferidos.\n\n## Restaurando a cópia...\n\nQuando desejar restaurar a cópia, bastará efetuar o procedimento reverso, definindo o arquivo de origem em if= e o dispositive de destivo em of=, algo como:\n\n\tdd if=~/imagens/2015-12-23-backup-raspbian.img of=/dev/rdisk2 bs=128m\n\nQuando o processo de cópia for concluído, bastará utilizar o Cartão ou Pendrive normalmente...","tags":["mac-os-x","macos","sd","pendrive","backup"],"categories":["blog"]},{"title":"Instalando Node.js no Raspbian","url":"/blog/2015/11/25/instalando-nodejs-no-raspbian/","content":"\n| Raspberry Pi 3  | Raspberry Pi 4  |\n| --------------- |:---------------:|\n| <a href=\"https://www.amazon.com.br/gp/product/B01CD5VC92?ie=UTF8&linkCode=li2&tag=schmitz-20&linkId=4f2021a2a4c1b0a33eec617fd9541a9a&language=pt_BR&ref_=as_li_ss_il\" target=\"_blank\"><img border=\"0\" src=\"//ws-na.amazon-adsystem.com/widgets/q?_encoding=UTF8&ASIN=B01CD5VC92&Format=_SL160_&ID=AsinImage&MarketPlace=BR&ServiceVersion=20070822&WS=1&tag=schmitz-20&language=pt_BR\" ></a><img src=\"https://ir-br.amazon-adsystem.com/e/ir?t=schmitz-20&language=pt_BR&l=li2&o=33&a=B01CD5VC92\" width=\"1\" height=\"1\" border=\"0\" alt=\"\" style=\"border:none !important; margin:0px !important;\" /> | <a href=\"https://www.amazon.com.br/gp/product/B07TC2BK1X?ie=UTF8&linkCode=li2&tag=schmitz-20&linkId=a1723e2362521127a480ceb4a9860096&language=pt_BR&ref_=as_li_ss_il\" target=\"_blank\"><img border=\"0\" src=\"//ws-na.amazon-adsystem.com/widgets/q?_encoding=UTF8&ASIN=B07TC2BK1X&Format=_SL160_&ID=AsinImage&MarketPlace=BR&ServiceVersion=20070822&WS=1&tag=schmitz-20&language=pt_BR\" ></a><img src=\"https://ir-br.amazon-adsystem.com/e/ir?t=schmitz-20&language=pt_BR&l=li2&o=33&a=B07TC2BK1X\" width=\"1\" height=\"1\" border=\"0\" alt=\"\" style=\"border:none !important; margin:0px !important;\" /> |\n\nA forma mais simples de instalar o **Node.js** no **Raspbian** é através da utilização do repositório da **Adafruit**, o qual se utiliza dos pacotes do projeto **node-arm**.\n\nO repositório da Adafrui é compatível, tanto com a versão **wheezy**, quanto com a versão **jessie** do Raspbian.\n\nUma vez que você esteja conectado ao Raspberry Pi, via SSH, ou diretamente no terminal do mesmo, basta executar os seguintes comandos:\n\n\nAdicionando o repositório da Adafruit:\n\n\t$curl -sLS https://apt.adafruit.com/add | sudo bash\n\nInstalando o Node.js\n\n\t$sudo apt-get install node\n\nPara testar o Node, basta executar:\n\n\t$node -v\n\nO repositório da Adafruit também possui outros pacotes que podem ser interessantes, então, dê uma olhada lá:\n[Adafruit's Raspberry Pi Package Repository](https://learn.adafruit.com/apt-adafruit-com/installing-packages \"Adafruit's Raspberry Pi Package Repository\")\n\nE se você não conhece o projeto node-arm, pode dar uma conferida em:\n[Node ARM: Node.js + Raspberry Pi](http://node-arm.herokuapp.com/ \"node-arm - An easy way to install node.js on the Raspberry Pi\")\n\n\n","tags":["nodejs","raspberry-pi","raspbian"],"categories":["blog"]},{"title":"Instalando SSD em MacBook Pro mid 2011","url":"/blog/2015/11/11/instalando-ssd-em-macbook-pro-mid-2011/","content":"Recentemente efetuei um upgrade em um MacBook Pro de 2011, substituindo o HD magnético por um SSD.\n\nEste procedimento é bastante simples e pode ser feito utilizando qualquer SSD, de qualquer marca.\n\nDiferente de como era à algum tempo atrás, a partir do OS X Yosemite 10.10.4, a Apple traz suporte total ao TRIM para SSDs de terceiros.\n\n## Substituindo o hardware\n\nO procedimento é bastante simples e consiste do seguinte passo-a-passo:\n\n* Com o MacBook Pro desligado, posicione-o de cabeça para baixo, sobre uma superfície plana\n* Remova os **parafusos**, são **10** no total (4 no topo, 1 em cada lateral e 4 na parte inferior)\n* Ao remover os parafusos, posicione-os de forma organizada, para que possa recoloca-los posteriormente, na mesma ordem.\n* Remova a tampa de alumínio\n* Na lateral inferior esquerda, você encontrará seu **HD**\n* Remova-o com cuidado, desconectando antes o **cabo flat**\n* Remova os parafusos **laterais do HD**, pois você irá precisar dos mesmos para prender o SDD\n* Prenda os parafusos removidos do HD, no **SSD**\n* Insira o SSD no lugar do antigo HD, conectando o cabo flat\n* Feche a tampa e prenda os parafusos novamente\n\n## Reinstalando o software\n\nUma vez que tenha inserido um novo disco, será necessário reinstalar o sistema operacional:\n\n* Dê boot no MacBook, com a tecla **Option** pressionada\n* No menu Utilitários, acesse o **Utilitário de Disco**\n* Selecione o seu Disco, na lateral esquerda e clique na opção Apagar\n* Defina o nome como **OSX**, em formato selecione **OS X Expandido (Reg. Cronológico)** e em Esquema, selecione **Mapa de Partição GUID**\n* Clique em Apagar\n\nQuando isto estiver concluído, reinicie o MacBook com a tecla **Option** pressionada e efetue a instalação do OS X.\n\n## Ativando o TRIM para o SSD\n\nApós a conclusão da instalação do OS X, o último passo a ser efetuado, á a ativação do TRIM.\n\nPara tal, basta abrir uma janela do Terminal e digitar o comando **sudo trimforce enable** e confirmar quando solicitado.\n\nSeu Mac será reiniciado e feito isto, tudo estará concluído.\n\n","tags":["mac-os-x","macos"],"categories":["blog"]},{"title":"Instalação Limpa do OS X El Capitan","url":"/blog/2015/10/02/instalacao-limpa-do-os-x-el-capitan/","content":"Abaixo irei detalhar o procedimento para efetuar a instalação limpa do recém lançado OS X El Capitan.\n\nCom o OS X ainda em funcionamento, efetue o download da Instalação do **OS X El Capitan** através da **Mac App Store**.\n\nQuando o download estiver concluído, cancele o processo de instalação.\n\nConecte um Disco, PenDrive ou Cartão SD, de no mínimo 8 GB ao MAC.\n\nAcesse o \"Utilitário de Disco\" pelo **Spotlight** ou através do diretório \"/Applications/\".\n\nEstando no \"Utilitário de Disco\", selecione o Dispositivo, na lista de Drives e clique sobre a aba \"Apagar\".\n\nEm \"Formato\" selecione a opção \"Mac OS Expandido (Reg. Cronológico)\" e em \"Nome\", defina o nome para \"ELCAPITAN\".\n\nFeito isto, clique no botão \"Apagar...\".\n\nQuando a formatação estiver concluída, feche o \"Utilitário de Disco\".\n\nAcesse o \"Terminal\" e execute o Seguinte Comando:\n\n\n\tsudo /Applications/Install\\ OS\\ X\\ El\\ Capitan.app/Contents/Resources/createinstallmedia --volume /Volumes/ELCAPITAN --applicationpath /Applications/Install\\ OS\\ X\\ El\\ Capitan.app --nointeraction\n\n\nO processo de cópia será efetuado e a seguinte mensagem será exibida:\n\n\n\tErasing Disk: 0%... 10%... 20%... 30%...100%...\n\tCopying installer files to disk...\n\tCopy complete.\n\tMaking disk bootable...\n\tCopying boot files...\n\tCopy complete.\n\tDone.\n\n\n## Partindo para a Instalação\n\nCom o Dispositivo conectado ao MAC, reinicie, ou ligue-o, mantendo a tecla \"Option\" pressionada.\n\nDeverá ser exibida uma \"lista\", na qual você deverá selecionar o dispositivo para o qual copiou a instalação, para assim seguir com a mesma.\n\nDeste ponto em diante, você possui duas opções:\n\n* Efetuar uma Instalação Limpa\n* Reinstalar o OS X\n\n\n## Efetuar uma Instalação Limpa:\n\n* Selecione o \"Utilitário de Disco\" e escolha a opção \"Continuar\".\n* Selecione o \"Disco Principal\" e clique na opção \"Apagar\", no topo da janela.\n\t* Defina um nome para o Disco, exemplo: \"OSX\"\n\t* Em Formato, mantenha a opção: \"OS X Expandido (Reg. Cronológico)\"\n\t* E em Esquema, mantenha \"Mapa de Partição GUID\".\n\t* Confirme as opções acima, clicando em \"Apagar\".\n* Aguarde e conclusão do processo.\n* Feche o \"Utilitário de Disco\".\n* Prossiga com uma instalação do zero...\n\n## Reinstalar o OS X:\n\nBastará selecionar a opção \"Reinstalar OS X\" e escolher a opção \"Continuar\".\nO processo de instalação e reinstalação, é praticamente o mesmo, com a diferença de a reinstalação manter seus arquivos, programas e algumas configuração, ao passo que a instalação limpa, obviamente irá lhe obrigar à reconfigurar e instalar novamente todos os seus programas, serviços, etc...\n","tags":["mac-os-x","macos","terminal","pendrive","app-store"],"categories":["blog"]},{"title":"Criando cartão SD com Raspbian no Mac OS X","url":"/blog/2015/08/24/criando-sd-com-raspbian-no-mac-os-x/","content":"\nO **Raspberry Pi** é um computador com processador **ARM**, que possui todo o seu hardware integrado em um única placa, do tamanho de um cartão de crédito e o **Raspbian** é uma versão do **Linux Debian** otimizada para executar no Raspberry Pi.\n\nPara obter uma cópia do Raspbian, basta acessar o site de Download do mesmo, no link: [https://www.raspberrypi.org/downloads/raspbian/](https://www.raspberrypi.org/downloads/raspbian/ \"Download Raspbian\")\n\nUma vez que você tenha efetuado o Download da Raspbian, bastará descompactar o conteúdo do arquivo .zip e seguir com a gravação do mesmo em um cartão SD.\n\nPrefira a escolha de um **cartão SD** de no mínimo **4 GB** e preferencialmente de **Classe 10** (maior velocidade de leitura e gravação).\n\nFeito isto, insira o cartão SD no Mac\n\nAcesse o aplicativo Terminal.app, pelo Spotlight (⌘ + Tecla Espaço) ou diretamente através do diretório /Applications/Utilities/\n\nExecute o comando \"**diskutil list**\", para obter uma lista de discos disponíveis:\n\n\t$diskutil list\n\nO retorno do **diskutil list**, poderá ser semelhante à isto:\n\n\t/dev/disk0\n\t   #:                       TYPE NAME                    SIZE       IDENTIFIER\n\t   0:      GUID_partition_scheme                        *320.1 GB   disk0\n\t   1:                        EFI EFI                     209.7 MB   disk0s1\n\t   2:          Apple_CoreStorage                         319.2 GB   disk0s2\n\t   3:                 Apple_Boot Recovery HD             650.0 MB   disk0s3\n\t/dev/disk1\n\t   #:                       TYPE NAME                    SIZE       IDENTIFIER\n\t   0:                  Apple_HFS OSX                    *318.8 GB   disk1\n\t                                 Logical Volume on disk0s2\n\t                                 279B8133-B7A8-44B7-840F-F46450EDAC3E\n\t                                 Unlocked Encrypted\n\t/dev/disk2\n\t   #:                       TYPE NAME                    SIZE       IDENTIFIER\n\t   0:     FDisk_partition_scheme                        *4.0 GB     disk2\n\t   1:                 DOS_FAT_32 RASPBPI                 4.0 GB     disk2s1\n\n\nIdentifique o disco relativo ao cartão SD, neste caso, é o /dev/disk2\n\nDesmonte o disco, com o comando \"**diskutil unmountDisk**\"\n\n\t$diskutil unmountDisk /dev/disk2\n\nUma vez que o disco esteja desmontado, você poderá acessa-lo e altera-lo diretamente.\n\nLocalize a imagem IMG do Raspbian, a qual deseja gravar no cartão SD ou copie-a para um local de fácil \"acesso\".\n\nPara efetuar a cópia, iremos utilizar o utilitário **dd**, o qual já se encontra disponível no Mac OS X.\n\nPara saber mais sobre o dd, basta consultar o Manual, digitando \"**man dd**\" no Terminal.\n\nA sintaxe básica do dd é:\n\n\tdd if=origem of=destino\n\n\n## Partindo para a cópia...\n\nSubstitua **origem** e **destino**, pelo arquivo IMG e pelo disco de destino respectivamente, logo teremos algo semelhante à:\n\n\tdd if=2015-05-05-raspbian-wheezy.img of=/dev/rdisk2 bs=128m\n\nNote que, para acelerar o processo de cópia, complementamos o comando, definindo o parâmetro block size (bs) como 128m e alteramos o disco de destino incluindo um \"**r**\" antes de \"**disk2**\".\n\nO **bs** indica que os **blocos** de leitura e escrita devem possuir o mesmo tamanho, enquanto que o \"**r**\" define que o disco deve ser acessado no modo **raw**.\n\nQuando o processo de cópia for concluído, você receberá uma mensagem informando o tempo decorrido e a quantidade de bytes transferidos.\n\nTudo pronto, agora basta inserir o cartão SD no Raspberry Pi, conectar os demais periféricos e liga-lo.\n\n| Raspberry Pi 3  | Raspberry Pi 4  |\n| --------------- |:---------------:|\n| <a href=\"https://www.amazon.com.br/gp/product/B01CD5VC92?ie=UTF8&linkCode=li2&tag=schmitz-20&linkId=4f2021a2a4c1b0a33eec617fd9541a9a&language=pt_BR&ref_=as_li_ss_il\" target=\"_blank\"><img border=\"0\" src=\"//ws-na.amazon-adsystem.com/widgets/q?_encoding=UTF8&ASIN=B01CD5VC92&Format=_SL160_&ID=AsinImage&MarketPlace=BR&ServiceVersion=20070822&WS=1&tag=schmitz-20&language=pt_BR\" ></a><img src=\"https://ir-br.amazon-adsystem.com/e/ir?t=schmitz-20&language=pt_BR&l=li2&o=33&a=B01CD5VC92\" width=\"1\" height=\"1\" border=\"0\" alt=\"\" style=\"border:none !important; margin:0px !important;\" /> | <a href=\"https://www.amazon.com.br/gp/product/B07TC2BK1X?ie=UTF8&linkCode=li2&tag=schmitz-20&linkId=a1723e2362521127a480ceb4a9860096&language=pt_BR&ref_=as_li_ss_il\" target=\"_blank\"><img border=\"0\" src=\"//ws-na.amazon-adsystem.com/widgets/q?_encoding=UTF8&ASIN=B07TC2BK1X&Format=_SL160_&ID=AsinImage&MarketPlace=BR&ServiceVersion=20070822&WS=1&tag=schmitz-20&language=pt_BR\" ></a><img src=\"https://ir-br.amazon-adsystem.com/e/ir?t=schmitz-20&language=pt_BR&l=li2&o=33&a=B07TC2BK1X\" width=\"1\" height=\"1\" border=\"0\" alt=\"\" style=\"border:none !important; margin:0px !important;\" /> |","tags":["mac-os-x","macos","sd","raspbian","pendrive","raspberry py"],"categories":["blog"]},{"title":"Please create a GitHub OAuth token to go over the API rate limit","url":"/blog/2015/07/09/please-create-a-github-oauth-token-to-go-over-the-api-rate-limit/","content":"As vezes, durante o uso do composer install, ou composer update, é possível que você se depare com uma mensagem semelhante à esta:\n\n\t...please create a GitHub OAuth token to go over the API rate limit...\n\nEsta mensagem é exibida, devido ao fato de o Github possuir um limite no número de requisições, que podem ser feitas por um usuário não autenticado, no período de 1 hora.\n\nMaiores informações aqui: [https://developer.github.com/changes/2012-10-14-rate-limit-changes/](https://developer.github.com/changes/2012-10-14-rate-limit-changes/ \"Rate Limit\")\n\nPara resolver este problema, você deve criar uma Personal access tokens.\n\n## Criando uma Personal access tokens\nPara criar uma Personal access tokens basta seguir alguns simples passos:\n\n- Acesse o link: [https://github.com/settings/tokens](https://github.com/settings/tokens \"Personal access tokens\")\n- Clique em \"Generate new token\"\n- Defina um nome para \"Token description\", por exemplo: Composer Install\n- Em \"Select scopes\", mantenha as permissões padrões\n- Clique em \"Generate token\"\n- Neste momento, copie e guarde a sua Token, pois você não poderá vê-la novamente no futuro\n\n## Configurando e usando a sua Token\nUma vez que a sua Token esteja criada, você pode configura-la para ser utilizada automaticamente ou pode simplesmente digita-la, quando for solicitada.\n\nPara o primeiro caso, existem duas possibilidades.\n\nDefinir a Token de forma global no composer:\n\n\tsudo composer config -g github-oauth.github.com <TOKEN>\n\nOu então, definir a Token por projeto, diretamente no composer.json:\n\n\t{\n\t  \"config\": {\n\t    \"github-oauth\": {\n\t      \"github.com\": \"<TOKEN>\"\n\t      }\n\t    }\n\t}\n\nEfetuadas as devidas configurações, basta passar à efetuar o acesso à API novamente, agora sem se preocupar com o limite no número de requisições.","tags":["php","api","github","composer"],"categories":["blog"]},{"title":"Utilizando o PIP","url":"/blog/2015/05/20/utilizando-o-pip/","content":"\nConforme já visto anteriormente, O PIP, é um sistema de gerenciamento de pacotes para Python.\nPor funcionar através de uma interface de linha de comando, toda a iteração se faz através de alguns simples comandos no terminal.\n\n## Instalando um módulo com o PIP\n\nPara efetuar a instalação de um módulo com o PIP, basta executar o comando pip, passando os argumentos install e o nome do módulo.\n\n\t$ pip install <modulo>\n\nExemplo:\n\n\t$ pip install awscli\n\n## Procurando módulos do PIP\n\nPara encontrar módulos disponíveis através do PIP, é possível utilizar o próprio PIP.\nPara isto basta executar o comando, passando os argumentos search e o nome ou descrição que possa conter no módulo.\n\n\t$ pip search <nome>\n\nExemplo:\n\n\t$ pip search awscli\n\n## Exibindo uma lista de módulos instalados\n\nPara exibir uma lista de módulos instalados, basta executar o comando pip, passsando o argumento list.\nO list irá retornar uma lista de modulos e suas respectivas versões.\n\n\t$ pip list\n\nExemplo:\n\n\tbotocore (0.101.0)\n\n## Exibindo uma lista de módulos desatualizados\nPara exibir uma lista de módulos desatualizados, basta executar o comando pip, passsando o argumento list, seguido de \"---outdated\".\n\n\t$ pip list --outdated\n\nO list irá retornar uma lista de modulos, com suas respectivas versões instaladas a suas versões mais atuais.\nExemplo:\n\n\tbotocore (Current: 0.101.0 Latest: 0.109.0 [sdist])\n\n## Atualizando um módulos desatualizado\n\nPara atualizar um módulos desatualizados, basta executar o comando pip, passsando o argumento install <nome&gt, seguido de \"---upgrade\".\n\n\t$ pip install <modulo> --upgrade\n\nExemplo:\n\n\t$ pip install botocore --upgrade\n\n## Removendo um módulo\n\nPara remover um módulo que você já não deseja mais, basta executar o comando pip, passsando o argumento uninstall  e o nome do módulo.\n\n\t$ pip uninstall <nome>\n\nExemplo:\n\n\t$ pip uninstall awscli\n\n## Exibindo informações sobre um módulo do PIP\nPara exibir informações sobre um módulo que já esteja instalado, basta executar o comando pip, passando os argumentos show e o nome do módulo.\n\n\t$ pip show <modulo>\n\nExemplo:\n\n\t$ pip show awscli\n\nA execução deste comando trará informações tais como:\n\n\tMetadata-Version: 1.1\n\tName: awscli\n\tVersion: 1.7.20\n\tSummary: Universal Command Line Environment for AWS.\n\tHome-page: http://aws.amazon.com/cli/\n\tAuthor: Mitch Garnaat\n\tAuthor-email: garnaat@amazon.com\n\tLicense: Apache License 2.0\n\tLocation: /Library/Python/2.7/site-packages\n\tRequires: botocore, bcdoc, colorama, docutils, rsa\n\n## Gerando uma lista de módulos\n\nPara gerar uma lista com todos os módulos que você possui atualmente instalado em seu ambiente, basta executar o comando pip, passando o argumento freeze.\nExemplo:\n\n\t$ pip freeze\n\nSe desejar, você pode direcionar a saída do resultado, diretamente para um arquivo.\nExemplo:\n\n\t$ pip freeze > requirements.txt\n\n## Instalando módulos com requirements.txt\n\nO requirements.txt é um padrão para a lista de módulos que são necessários ao seu projeto.\nDesta forma, ao criar um projeto, pode-se tambem criar um arquivo requirements.txt na raiz do seu projeto, onde cada linha do arquivo irá possuir um par de chave e valor.\n\nExemplo:\n\n\tawscli==1.7.20\n\nNeste exemplo, a chave indica o nome do módulo e o valor, a versão do módulo a ser instalado.\n","tags":["pip","terminal","python"],"categories":["blog"]},{"title":"Instalando o gerenciador de pacotes PIP","url":"/blog/2015/04/09/instalando-o-gerenciador-de-pacotes-pip/","content":"O PIP, é um sistema de gerenciamento de pacotes para Python.\nComo o PIP funciona através de uma interface de linha de comando, efetuar a instalação de pacotes de software Python, se torna uma tarefa bastante simples.\n\n## Instalando o PIP\n\nVá até o terminal e execute o seguinte comando:\n\n\t$ curl -O https://bootstrap.pypa.io/get-pip.py\n\nExecutando o comando acima, você irá efetuar o download do script de instalação do PIP.\nAgora, basta efetuar a instalação em si.\n\n\t$ sudo python get-pip.py\n\nLembre-se de executar o comando como super usuário.\nApós alguns instantes, a instalação será concluída.\n","tags":["pip","terminal","python"],"categories":["blog"]},{"title":"Instalando o PostgreSQL no MAC OS X","url":"/blog/2015/03/23/instalando-o-postgresql-no-mac-os-x/","content":"O PostgreSQL é um Banco de Dados Objeto Relacional, desenvolvido como projeto de código aberto, atualmente na versão 9.4.1.\n\n## Instalando o PostgreSQL\nPara efetuar a instalação do PostgreSQL você deverá ter o [Homebrew instalado](http://www.maiconschmitz.com.br/instalando-o-gerenciador-de-pacotes-brew/)\n\nEstando o Homebrew instalado e funcional, basta seguir os seguintes passos:\n\nAcesse o terminal e execute:\n\n\tbrew install postgres\n\nQuando a instalação do Homebrew estiver concluída, efetue a criação da base de dados padrão, executando:\n\n\tinitdb /usr/local/var/postgres\n\n## Configurando o PostgreSQL para iniciar com o Mac OS X\n\nPara que o PostgreSQL seja iniciado automaticamente, sempre que você inicia o sistema operacional, basta executa os seguintes comandos:\n\n\tmkdir -p ~/Library/LaunchAgents\n\tln -sfv /usr/local/opt/postgresql/*.plist ~/Library/LaunchAgents\n\tlaunchctl load ~/Library/LaunchAgents/homebrew.mxcl.postgresql.plist\n\n## Criando a base de dados para o seu usuário\n\nPara criar uma base de dados para o seu usuário, basta executa o comando **createdb**:\n\n\tcreatedb `whoami`\n","tags":["mac-os-x","macos","postgresql"],"categories":["blog"]},{"title":"Instalando Composer no MAC OS X","url":"/blog/2015/03/04/instalando-composer-no-mac-os-x/","content":"O Composer é um gerenciador de dependências para PHP.\n\nCom o Composer, você pode definir uma lista de bibliotecas e as versões, das quais o seu projeto depende.\n\nO Composer se encarrega da instalação, organização e também da disponibilização das mesmas no seu projeto.\n\n## Instalando o Composer\n\nPara efetuar a instalação do Composer você deve executar os seguintes passos.\n\nAcesse o terminal e execute:\n\n\tcurl -s https://getcomposer.org/installer | php\n\nCaso o Composer retorne uma mensagem como a seguinte:\n\n\tSome settings on your machine make Composer unable to work properly.\n\tMake sure that you fix the issues listed below and run this script again:\n\n\tThe detect_unicode setting must be disabled.\n\tAdd the following to the end of your `php.ini`: detect_unicode = Off\n\n\tA php.ini file does not exist. You will have to create one.\n\n\nEntão significa que o php.ini para o PHP CLI deve ser configurado!\n\nSendo assim, você deve descobrir onde esta o php.ini, executando:\n\n\tphp -i | grep 'Configuration File'\n\nNeste caso, o retorno foi:\n\n\tConfiguration File (php.ini) Path => /etc\n\tLoaded Configuration File => (none)\n\nIndicando que o o php.ini não existia!\n\nEntão, execute os seguintes passos:\n\n\tcd /etc\n\tsudo touch php.ini\n\tsudo vim php.ini\n\nAdicione o seguinte conteúdo ao arquivo:\n\n\t; Adicionado por ser um requisito do Composer\n\tdetect_unicode = Off\n\nSe o seu arquivo php.ini existir, então, simplesmente edite-o e adicione o conteúdo anterior ao final do mesmo.\n\nSe você não desejar criar um php.ini, você poderá simplesmente executar a instalação do Composer, da seguinte forma:\n\n\tcurl -s getcomposer.org/installer | php -d detect_unicode=Off\n\nCom o php.ini criado/alterado, volte ao seu diretório raiz:\n\n\tcd ~/\n\nExecute o comando de download/instalação novamente:\n\n\tcurl -s https://getcomposer.org/installer | php\n\nCaso o retorno seja semelhante à:\n\n\t#!/usr/bin/env php\n\tAll settings correct for using Composer\n\tDownloading...\n\tComposer successfully installed to: /Users/maiconschmitz/composer.phar\n\tUse it: php composer.phar\n\nEntão significa que tudo ocorreu conforme o esperado.\n\nPara tester se o composer esta devidamente instalado, basta executar o comando:\n\n\tphp composer.phar\n\nou\n\n\t./composer.phar\n\n## Acesso global ao Composer\n\nPara tornar o acesso ao Composer global, você pode criar um link simbolico para o mesmo no seguinte diretório:\n\n\t/usr/local/bin/\n\nPara isto, execute o seguinte comando:\n\n\tsudo ln -s ~/composer.phar /usr/local/bin/composer\n\nOnde \"~/composer.phar\" é a localização atual do arquivo phar do Composer.\n\nPronto, o acesso ao Composer será extremamente facilitado a partir de agora, bastando chamar \"composer\" de qualquer local do sistema.\n\n## Atualizando o Composer\n\nPara atualizar o Composer, basta executa-lo, passando o parâmetro \"self-update\"\n\nExecute:\n\n\t./composer.phar self-update\n\nou\n\n\tcomposer self-update","tags":["mac-os-x","macos","terminal","php"],"categories":["blog"]},{"title":"Instalando o DD-WRT no TL-WR740N","url":"/blog/2015/02/09/instalando-o-dd-wrt-no-tl-wr740n/","content":"O **DD-WRT** é um firmware para roteadores, baseado em **Linux**.\nA idéia por trás do **DD-WRT** é a possibilidade de utilizar todos os recursos suportados pelo harware do seu roteador, mesmo quando o firmware padrão do mesmo não o suporta. Neste caso, a alternativa é substituir o firmware de fábrica.\n\nDentre as principais opções temos o **DD-WRT**: [https://dd-wrt.com](https://dd-wrt.com \"https://dd-wrt.com\"), o **OpenWRT**: [https://openwrt.org](https://openwrt.org \"https://openwrt.org\") e o **Tomato**: [http://www.polarcloud.com/tomato](http://www.polarcloud.com/tomato \"http://www.polarcloud.com/tomato\").\n\n## Encontrando o Firmware\n\nEncontre o Firmware para o seu dispositivo na Router Database do DD-WRT:\n[https://dd-wrt.com/support/router-database/](https://dd-wrt.com/support/router-database/ \"https://dd-wrt.com/support/router-database/\").\n\nTenha a certeza de selecionar a versão correta para o seu dispositivo.\n\nEm nosso exemplo utilizamos um equipamento da TP-Link, modelo TL-WR740N, versão 4.x.\nA informação do modelo e versão (o mais importante), poderá ser encontrada na etiqueta do produto (na parte inferior) ou então na seção administrativa do equipamento (ao efetuar login).\n\n## Especificações do TL-WR740N\n\nO Roteador TL-WR740N da TP-Link, possui as seguintes especificações:\n\n\tChipset: AR9331\n\tMemória RAM: 32 MB\n\tMemória FLASH: 4 MB\n\nNa lista de arquivos disponíveis para Download na Router Database você irá encontrar o seguinte:\n\n\tNome: WR740N v4.x Firmware\n\tDescrição: Webflash image for first installation\n\tArquivo: factory-to-ddwrt.bin\n\tData: 2013-04-25\n\tTamaho: 3,75 MB\n\n\tNome: WR740N v4.x Webrevert\n\tDescrição: Back to stock\n\tArquivo: wr740nv4_webrevert.rar\n\tData: 2013-04-24\n\tTamaho: 3,36 MB\n\n\tNome: WR740N v4.x Firmware\n\tDescrição: Webflash image\n\tArquivo: tl-wr740nv4-webflash.bin\n\tData: 2013-04-25\n\tTamanho: 3,75 MB\n\n## Efetuando a instalação\n\nApós efetuar o download dos arquivos anteriormente relacionados, bastará efetuar o login no seu Routeador, através do IP padrão: **192.168.1.1** ou de outro que você tenha configurado.\n\nAcesse a área administrativa e vá até a opção de atualização do firmware.\n\nNeste primeiro momento você irá utilizar o arquivo: **factory-to-ddwrt.bin**.\n\nConfirme a atualização e aguarde o procedimento ser concluído (não desligue o seu roteador enquanto o procedimento é executado).\n\nQuando o upgrade estiver concluído, você irá acessar o IP 192.168.1.1 e já estará acessando/utilizando o DD-WRT.\n\nNeste momento, você deverá definir o seu usuário e senha de acesso.\n\nFeito isto, encontre a área administrativa do DD-WRT e vá até a opção de atualização do firmware.\n\nNeste segundo momento você irá utilizar o arquivo: **tl-wr740nv4-webflash.bin**.\n\nConfirme a atualização e aguarde o procedimento ser concluído (não desligue o seu roteador enquanto o procedimento é executado).\n\nQuando o upgrade estiver concluído, você poderá voltar a acessar o IP 192.168.1.1 e poderá explorar todas as funcionalidades do DD-WRT.\n\nSe desejar, você poderá voltar para o firmware antigo do seu roteador, para isto, bastará efetuar a \"atualização de firmware\" com o arquivo: **wr740nv4_webrevert.rar**.\n\nSe julgar interessante, você pode configurar uma **VPN** facilmente, seguindo o guia: [https://www.comparitech.com/blog/vpn-privacy/best-vpn-dd-wrt-router/](https://www.comparitech.com/blog/vpn-privacy/best-vpn-dd-wrt-router/ \"https://www.comparitech.com/blog/vpn-privacy/best-vpn-dd-wrt-router/\").","tags":["linux","dd-wrt"],"categories":["blog"]},{"title":"Instalando o gerenciador de pacotes Brew","url":"/blog/2015/01/09/instalando-o-gerenciador-de-pacotes-brew/","content":"\nO **Homebrew**, ou **Brew**, é um gerenciador de pacotes para OS X.\n\nCom o **Brew**, o processo de instalação de diversos softwares, na sua maioria open source, se torna algo bastante simples.\n\nO Brew é baseado em fórmulas, scripts Ruby, portanto, a primeira coisa a fazer, é verificar se o **Ruby** esta instalado.\n\n\n## Verifique se você possui o Ruby instalado.\n\nVá até o terminal e execute o seguinte comando:\n\n\t$ which ruby\n\nSe retornar algo (caminho do ruby), então significa que o Ruby esta instalado. Nomalmente o Ruby vem instalado por padrão, mas nem sempre é a versão mais atual.\n\nSe desejar verificar a versão do Ruby, simplesmente execute:\n\n\t$ ruby -v\n\n## Efetuando a instalação do Brew\n\nPara efetuar a instalação do Brew, estando no Terminal, execute:\n\n\t$ ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n\nApós alguns instantes, se a instalação ocorrer sem problemas, você terá o seguinte retorno:\n\n\t...\n\t==> Installation successful!\n\t==> Homebrew has enabled anonymous aggregate user behaviour analytics.\n\tRead the analytics documentation (and how to opt-out) here:\n\thttp://docs.brew.sh/Analytics.html\n\t==> Next steps:\n\t- Run `brew help` to get started\n\t- Further documentation:\n\t\thttp://docs.brew.sh\n\nCaso ocorra algum erro, poderá ser necessário instalar o Xcode e o Command Line Tools da Apple.\n\nCaso não saiba como, veja o passo a passo de [Instalação do Xcode Command Line Tools](https://www.maiconschmitz.com.br/blog/2015/01/09/instalando-o-xcode-e-o-command-line-tools).\n\nSe a instalação ocorrer sem problemas, então basta executar o Brew Doctor.\n\n\t$ brew doctor\n\nSe o retorno for \"Your system is ready to brew\", então o Brew estará pronto para ser utilizado.\n\nExecute:\n\n\tbrew help\n\nE veja os comandos disponíveis para pesquisar e instalar pacotes, ou se desejar, consulte a documentação online em [http://docs.brew.sh](http://docs.brew.sh).\n","tags":["mac-os-x","macos","ruby","brew"],"categories":["blog"]},{"title":"Instalando o Xcode e o Command Line Tools","url":"/blog/2015/01/09/instalando-o-xcode-e-o-command-line-tools/","content":"O Xcode é o ambiente/plataforma de desenvolvimento da Apple.\n\nSe você não possui o Xcode, instale-o a partir da AppStore, ou obtenha o link para o mesmo na página de Download:\n\n\n[https://developer.apple.com/xcode/downloads/](https://developer.apple.com/xcode/downloads/ \"https://developer.apple.com/xcode/downloads/\").\n\n## Instalando o Command Line Tools\n\nO Command Line Tools é um conjunto de ferramentas de linha de comando, parte integrante do Xcode.\n\nSe você já possui o Xcode ou acabou de instala-lo, bastará acessar o terminal e executar o seguinte comando:\n\n\txcode-select --install\n\nO comando acima irá disparar a instalação do Command Line Tools.\n\nCaso ocorra algum erro, outra alternativa será executar a instalação do Command Line Tools através do Download manual.\n\nPara isto, basta executar o Xcode.app e no menu \"Xcode\", selecionar \"Open Developer Tool\" / \"More Developer Tools\".\n\nIsto irá abrir uma página ([https://developer.apple.com/downloads/index.action?name=for%20Xcode%20-](https://developer.apple.com/downloads/index.action?name=for%20Xcode%20- \"https://developer.apple.com/downloads/index.action?name=for%20Xcode%20-\"){:target=\"_blank\"}) com a lista de Downloads, na qual você deve selecionar a versão correta do instalador desejado.\n\nUma vez que o Command Line Tools esteja instalado, você poderá utilizar, por exemplo, o compilador gcc, o qual se faz necessário para a instalação (compilar) de diversas ferramentas open source.\n\nPara verificar se o GCC esta corretamente instalado, basta executar:\n\n\t$ which gcc\n\nSe o resultando retornar algo como:\n\n\t/usr/bin/gcc\n\nEntão isto sinifica que esta tudo ok.","tags":["mac-os-x","macos","terminal","app-store","apple","gcc","xcode"],"categories":["blog"]},{"title":"Instalação limpa do OS X Yosemite","url":"/blog/2014/12/30/instalacao-limpa-do-os-x-yosemite/","content":"Neste passo-a-passo irei mostrar como efetuar uma instalação limpa do OS X (clean install)\n\nCom o OS X ainda em funcionamento, efetue o download da Instalação do **OS X Yosemite** através da **Mac App Store**.\n\nQuando o download estiver concluído, cancele o processo de instalação.\n\nConecte um **Disco**, **PenDrive** ou **Cartão SD**, de no mínimo **8 GB** ao MAC.\n\nAcesse o \"Utilitário de Disco\" pelo **Spotlight** ou através do diretório \"/Applications/\".\n\nEstando no \"Utilitário de Disco\", selecione o Dispositivo, na lista de Drives e clique sobre a aba \"Apagar\".\n\nEm \"Formato\" selecione a opção \"Mac OS Expandido (Reg. Cronológico)\" e em \"Nome\", defina o nome para \"PENDRIVE\".\n\nFeito isto, clique no botão \"Apagar...\".\n\nQuando a formatação estiver concluída, feche o Finder.\n\nAcesse o \"Terminal\" e execute o Seguinte Comando:\n\n\tsudo /Applications/Install\\ OS\\ X\\ Yosemite.app/Contents/Resources/createinstallmedia --volume /Volumes/PENDRIVE --applicationpath /Applications/Install\\ OS\\ X\\ Yosemite.app --nointeraction\n\nO processo de cópia será efetuado e a seguinte mensagem será exibida:\n\n\tErasing Disk: 0%... 10%... 20%... 30%...100%...\n\tCopying installer files to disk...\n\tCopy complete.\n\tMaking disk bootable...\n\tCopying boot files...\n\tCopy complete.\n\tDone.\n\n## Partindo para a Instalação\n\nCom o Dispositivo conectado ao MAC, reinicie, ou ligue-o, mantendo a tecla \"Option\" pressionada.\n\nDeverá ser exibida uma \"lista\", na qual você deverá selecionar o Pendrive para seguir com a instalação.\n\nDeste ponto em diante, você possui duas opções:\n\n*   Efetuar uma Instalação Limpa\n*   Reinstalar o OS X\n\n### Efetuar uma Instalação Limpa:\n\nSelecione o \"Utilitário de Disco\" e escolha a opção \"Continuar\".\n\nSelecione o \"Disco Principal\", vá até a aba \"Apagar\" e escolha a opção \"Apagar\".\n\nAguarde e conclusão do processo.\n\nFeche o \"Utilitário de Disco\".\n\nProssiga com uma instalação do zero...\n\n### Reinstalar o OS X:\n\nBastará selecionar a opção \"Reinstalar OS X\" e escolher a opção \"Continuar\".\n\nO processo de instalação e reinstalação, é praticamente o mesmo, com a diferença de a reinstalação manter seus arquivos, programas e algumas configuração, ao passo que a instalação limpa, obviamente irá lhe obrigar à reconfigurar e instalar novamente todos os seus programas, serviços, etc...","tags":["mac-os-x","macos","terminal","pendrive","app-store"],"categories":["blog"]},{"title":"Instalando o REDIS no MAC OS X","url":"/blog/2014/12/29/instalando-o-redis-no-mac-os-x/","content":"O Redis é um banco de dados NoSQL do tipo chave/valor, extremamente rápido, o que o torna um banco de dados ideal para diversas situações.\n\nFácil de instalar e fácil de operar, é escrito em C, o que o torna compatível com os diversos sistemas Linux, Unix, etc.\n\nCaso você deseje instalar o **Redis**, bastará executar apenas alguns simples passos.\n\nAbra o Terminal de sua preferência e efetue o Download do Redis:\n\n\t$ curl -O http://download.redis.io/releases/redis-2.8.19.tar.gz\n\nQuando o Download estiver concluído, extraia o contúdo do pacote tar.gz:\n\n\t$ tar xvzf redis-2.8.19.tar.gz\n\nApós a descompactação do conteúdo do pacote, acesse a pasta recem criada:\n\n\t$ cd redis-2.8.19\n\nExecute um make para compilar os fontes:\n\n\t$ make\n\nSe tudo ocorrer normalmente, bastará agora mover os binários para o local adequado:\n\n\t$ sudo mv src/redis-server /usr/bin\n\t$ sudo mv src/redis-cli /usr/bin\n\n\n## Arquivo de Configurações\n\nCaso você deseje efetuar alguma configuração específica para o Redis, poderá criar um arquivo de configuração nomeado **redis.conf** na sua pasta home.\n\nPara isto, execute:\n\n\t$ mkdir ~/.redis\n\t$ touch ~/.redis/redis.conf\n\n\nAgora basta configurar o arquivo **redis.conf**, de acordo com as suas necessidades.\n\nVale lembrar que para que o seu arquivo de configuração seja efetivamente utilizado, é necessário que você indique-o ao Redis.\n\n## Rodando o Servidor no Console\n\nConforme visto, para executar o Redis, basta chamar o executável:\n\n\tredis-server\n\nCom isto, você terá o **Redis** em execução.\n\nSe desejar, poderá executar o Redis, passando como argumento, o arquivo de configurações:\n\n\tredis-server ~/.redis/redis.conf\n\n## Acessando o Redis via Console\n\nCaso deseje acessar o Redis via terminal, basta chamar o executável:\n\n\tredis-cli\n\nDois comandos bastante úteis que utilizo são:\n\n\t$ FLUSHDB\n\n_Este comando remove todos os dados da base na qual você esta atualmente conectado._\n\n\t$ FLUSHALL\n\n_Este comando remove todos os dados de todas as bases de dados._\n\nPara uma lista completa dos comandos disponíveis, acesse: [http://redis.io/commands](http://redis.io/commands \"http://redis.io/commands\")","tags":["mac-os-x","macos","terminal","redis"],"categories":["blog"]},{"title":"Atualizando o Node.js via npm","url":"/blog/2014/09/11/atualizando-o-node-js-via-npm/","content":"Para atualizar o **Node.js**, é possível utilizar o **npm**.\n\nIndependente da forma como o **Node.js** foi instalado, seja via pacote ou até mesmo compilado, é possível efetuar a atualização do mesmo via npm.\n\nEste formato de atualização foi testado no Ubuntu, com o **Node.js** tendo sido instalado via apt, no CentOS, tendo sido compilado e também no Mac OS X, tendo sido instalado pelas vias padrões.\n\nOs passos para atualizar o **Node.js** são extremamente simples e são exemplificados logo abaixo.\n\nPrimeiramente, iremos verificar a versão do **Node.js**, executando:\n\n\tnode -v\n\n## Partindo para a atualização propriamente dita\n\nExecute a seguinte sequência de comandos:\n\n\tsudo npm cache clean -f\n\tsudo npm install -g n\n\nAgora, para atualizar o **Node.js**, você tem duas opções:\n\nPode escolher istalar o **Node.js** na sua versão mais atual e estável, executando:\n\n\tsudo n stable\n\nOu pode istalar o **Node.js** em uma versão mais específica, neste exemplo, a versão 0.11.x.\nPara isto, basta executar:\n\n\tsudo n 0.11\n\nCom isto você tem o **Node.js** atualizado na versão desejada.","tags":["nodejs","npm"],"categories":["blog"]},{"title":"Compilando e Instalando o Node.js no CentOS 7","url":"/blog/2014/08/26/compilando-e-instalando-o-nodejs-no-centos-7/","content":"Para poder compilar e instalar o **Node.js** no CentOS 7, você deverá executar alguns passos.\n\nPrimeiramente, prepare um local para baixar o Node.js.\n\nPode ser na sua pasta home:\n\n\t$ cd ~\n\t$ mkdir node\n\t$ cd node/\n\n## Baixe e Descompacte o Node\n\n\t$ wget http://nodejs.org/dist/v0.10.31/node-v0.10.31.tar.gz\n\t$ tar xzvf node-v* && cd node-v*\n\nÀ título de curiosidade, atualmente a versão estável é a v0.10.31.\n\nPara poder compilar, será necessário possuir o **GCC**, caso você não o possua instalado, então intale-o:\n\n\t$ sudo yum install gcc gcc-c++\n\n## Compilando e Instalando o Node.js\n\nPara compilar e instalar o Node, execute a sequência de comandos abaixo:\n\n\t$ ./configure\n\t$ make\n\t$ sudo make install\n\nQuando o processo de instalação estiver concluído, você poderá verificar se tudo ocorreu normalmente, testando por exemplo, a versão do node que você acabou de instalar.\n\nPara isto, bastará executar o seguinte comando:\n\n\t$ node --version\n\nO qual, neste exemplo, resultou em:\n\n\tv0.10.31\n\nCom isto você tem o **Node.js** instalado e pronto para usar.","tags":["nodejs","centos","terminal"],"categories":["blog"]},{"title":"Criando um Pendrive bootavel com XenServer no Windows","url":"/blog/2014/08/18/criando-um-pendrive-bootavel-com-xenserver-no-windows/","content":"O **XenServer** é uma plataforma de virtualização open-source que pode ser utilizada para gerenciar infraestruturas virtuais em nuvem, servidor e desktop.\n\nAtravés deste tutorial você irá aprender como criar um Pendrive bootavel com o XenServer, para efetuar a sua própria instalação.\n\nPrimeiramente, você deverá ter em mãos, a ISO do **XenServer**. Caso você ainda não a possua, então poderá obte-la do site do XenServer, através do link: http://xenserver.org/overview-xenserver-open-source-virtualization/download.html.\nAtualmente, o XenServer encontra-se na versão 6.2.\n\nO próximo passo, será obter uma cópia do **Universal USB Installer**, através deste link: http://www.pendrivelinux.com/universal-usb-installer-easy-as-1-2-3/.\n\nCom os dois pré-requisito preenchidos e estando em um equipamento rodando o sistema operacional Windows, siga os passo a seguir:\n\n*   Conecte o **Pendrive** ao equipamento.\n*   Execute o software **Universal USB Installer**.\n*   Estando com o Universal USB Installer em execução, siga os seguintes passos:\n*   - Em \"Step 1\", selecione \"Other\" na combo-box de opções.\n*   - Em \"Step 2\", clique em \"Browse\" e selecione a ISO do XenServer.\n*   - Em \"Step 3\", selecione o seu Pendrive (preferenciamente já formatado em (FAT32)\n*   - Clique em \"Create\" e aguarde o processo ser concluído.\n\nQuando o processo for concluído, bastará remover o seu Pendrive e partir para a instalação.\n","tags":["windows","pendrive","xenserver"],"categories":["blog"]},{"title":"Adicionando chaves SSH para conexão entre 2 Servidores","url":"/blog/2014/08/12/adicionando-chaves-ssh-para-conexao-entre-2-servidores/","content":"Adicionar **chaves SSH** para trabalhar entre 2 **Servidores**, sem a necessidade de digitar a sua senha a cada **conexão**, é uma boa opção para automatizar tarefas.\n\nEste processo pode ser executado em qualquer ambiente que suporte SSH, como **Linux**, **MAC OS X**, ou até mesmo **Windows**, com alguns passos adicionais.\n\nNeste exemplo, será demonstrado um passo a passo de como efetuar a configuração de chaves SSH, entre 2 servidores Linux, com o usuário **root**.\n\nPrimeiramente, no servidor onde a conexão será originada.\n\nExecute o seguinte comando:\n\n\t$ ssh-keygen -b 1024 -t rsa\n\nVisualize o conteúdo do arquivo e copie a sua chave:\n\n\t~/.ssh/id_rsa.pub\n\nA sua chave será ~~parecida~~ com:\n\n\tssh-rsa U2Ugdm9jw6ogZGVjb2RpZmljb3Ugc8OzIHBhcmEgdmVyIG8gY29udGXDumRvLCBkZWl4ZSBzZXUgY29tZW50w6FyaW8gYWJhaXhvIDsp SEU-USUARIO@SEU-HOST\n\nTendo copiado a chave ssh, conecte-se ou acesse o servidor que irá receber a conexão.\n\nEstando no terminal do mesmo, acesse o diretório .ssh da sua pasta home (~/.ssh)\n\n\t$ cd ~/.ssh\n\nCaso o diretório não exista, crie-o\n\n\t$ mkdir ~/.ssh\n\nE então acesse-o...\n\n\t$ cd ~/.ssh\n\nCole a chave anteriormente copiada ao final no arquivo:\n\n\t~/.ssh/authorized_keys\n\nLembre-se, que caso o arquivo não exista, ele também deverá ser criado.\n\nProcesso concluído, basta voltar ao servidor inicial e abrir a conexão com o servidor de destino.\n\n\tssh nomedohost -l usuario\n\nSe a senha não for solicitada, então isto significa que tudo esta funcionando normalmente.","tags":["linux","mac-os-x","ssh","macos"],"categories":["blog"]},{"title":"Instalando o Node.js no Ubuntu","url":"/blog/2014/07/28/instalando-o-nodejs-no-ubuntu/","content":"Caso você deseje instalar o **Node.js**, em sua versão disponível no canal oficial do **APT**, bastará executar um simples comando:\n\n\t$ sudo apt-get install nodejs\n\nCom isto você irá instalar a versão mais recente disponível no canal **APT**, que atualmente é a versão v0.10.25.\n\nEm contra partida, caso você deseja instalar a última versão corrente, então você deverá seguir os passos abaixo.\n\n## Instalando a versão mais recente do Node.js\n\n\t$ sudo apt-get update\n\t$ sudo apt-get install -y python-software-properties python g++ make\n\t$ sudo add-apt-repository -y ppa:chris-lea/node.js\n\t$ sudo apt-get update\n\t$ sudo apt-get install nodejs\n\nPara verificar a versão que você acabou de instalar, bastará executar o seguinte comando:\n\n\t$ nodejs -v\n\nNeste exemplo, resultou em:\n\n\tv0.10.29\n\nCom isto você tem o **Node.js** instalado e pronto para usar.","tags":["nodejs","terminal","ubuntu"],"categories":["blog"]},{"title":"Configurando chaves SSH para acessar o BitBucket no Ubuntu","url":"/blog/2014/07/07/configurando-chaves-ssh-para-acessar-o-bitbucket-no-ubuntu/","content":"Uma boa escolha para trabalhar com o **BitBucket**, sem a necessidade de digitar a sua senha a cada **push** ou **pull** do **GIT**, é a configuração de **chaves SSH**.\nSeja no **Linux**, **MAC OS X** ou até **Windows**, a configuração de chaves SSH é uma ótima e segura opção.\n\nNo exemplo abaixo, será demonstrado um passo a passo de como efetuar a configuração de chaves SSH no Ubuntu Linux.\n\nEstando no terminal, acesse o diretório .ssh da sua home (~/.ssh)\n\n\t$ cd ~/.ssh\n\nCaso o diretório não exista, crie-o\n\n\t$ mkdir ~/.ssh\n\nE então acesse-o...\n\n\t$ cd ~/.ssh\n\nSe o diretório existir, procure pela sua chave pública.\nA chave pública estará em um arquivo nomeado como **id_rsa.pub** ou **id_dsa.pub**\n\n\t$ ls\n\nSe nenhum dos arquivos: id_rsa.pub ou id_dsa.pub existir, então significa que você deverá cria-los:\n\n## Criando sua chave pública\n\nPara criar a sua chave publica, basta executar o comando abaixo, lembrando de alterar o endereço \"ENDERECO-DE-EMAIL@DOMINIO.COM.BR\" pelo seu e-mail.\n\n\t$ ssh-keygen -t rsa -C \"ENDERECO-DE-EMAIL@DOMINIO.COM.BR\"\n\nQuando for solicitado o nome do arquivo a ser criado, defina um de sua preferência ou simplesmente confirme a sugestão, pressionando <Enter>\nQuando solicitar uma passphrase, defina uma senha ou deixe-a em branco, simplesmente pressionando <Enter>\n\n**Importante:**\n\n*   Defina uma passphrase, caso você deseje que uma senha seja solicitada ao acessar o repositório.\n*   Deixe a passphrase em branco, caso você deseje que nenhuma senha seja solicitada ao acessar o repositório. Este método é mais simples,\n    já que nenhuma senha será solicitada, bem como é o propósito de criação das chaves neste caso.\n\nAgora que a sua chave esta criada, liste os arquivos do diretório ~/.ssh\n\n\t$ ls ~/.ssh\n\nVisualize e copie o conteúdo da sua chave, tomando o cuidado para não adicionar espaços extras no início ou no final do arquivo\n\n\t$ cat ~/.ssh/id_rsa.pub\n\nSua chave normalmente irá iniciar com a string: \"ssh-rsa \" e terminar com o endereço de e-mail anteriormente informado: \"ENDERECO-DE-EMAIL@DOMINIO.COM.BR\"\n\n## Configurando no BitBucket\n\nAcesse o BitBucket e efetue o login em sua conta: [http://www.bitbucket.org](http://www.bitbucket.org \"http://www.bitbucket.org\")\n\nClique no seu \"Avatar\" e selecione o item de menu \"Gerenciar conta\"\n\nNo menu esquerdo, no grupo \"SECURITY\" selecione \"Chaves SSH\"\n\nClique em \"Adicionar Chave\"\n\nDefina um \"Label\" para identificar esta chave:\nExemplo: \"ENDERECO-DE-EMAIL@DOMINIO.COM.BR em ubuntu\"\n\nCole o conteúdo da chave (anteriormente copiado) no campo \"Key\"\n\nConfirme, clicando em “Adicionar chave”.\n\nVolte ao Terminal para testar se a adição das chaves funcionou de forma correta\n\n\t$ ssh -T git@bitbucket.org\n\nQuando solicitar se você deseja realmente conectar:\n_\"Are you sure you want to continue connecting (yes/no)?\"_\n\nConfirme, digitando: yes\n\nSe você definiu um passphrase, então no próximo passo, lhe será solicitada uma passphrase; Neste caso, digite a mesma que você utilizou ao criar a sua chave pública\n\nSe no terminal lhe mostrar uma mensagem contendo: \"logged in as XYZ\", onde XYZ é o nome do seu usuário, então a adição da chave pública funcionou de acordo!\n\nProcesso Concluído.","tags":["mac-os-x","ssh","macos","terminal","ubuntu"],"categories":["blog"]},{"title":"Deixando o Terminal e o VIM Coloridos no MAC OS X","url":"/blog/2014/06/23/deixando-o-terminal-e-o-vim-coloridos-no-mac-os-x/","content":"O processo de configuração se inicia pelo **.bashrc** e pelo **.vimrc** e pode ser executado diretamente no **Terminal.app**.\n\nAcesse o aplicativo **Terminal.app**, pelo **Spotlight** (⌘ + Tecla Espaço) ou diretamente através do diretório **/Applications/Utilities/**\n\n## SHELL\n\nPara configurar o Shell, verifique pela existência do arquivo **.bashrc** na sua pasta de usuário:\n\nEntre na sua pasta de usuário:\n\n\t$ cd ~\n\nVerifique pela existência do arquivo **.bashrc**:\n\n\t$ ls -la .bashrc\n\nCaso o arquivo não exista, crie-o:\n\n\t$ touch .bashrc\n\nEdite o arquivo e adicione o conteúdo que segue, ao final do mesmo:\n\n\texport TERM=xterm-color\n\talias ls=\"ls -G\"\n\nReinicie o Terminal (feche-o e abra novamente)\n\nCarregue o conteúdo do **.bashrc**\n\n\t$ source .bashrc\n\nPronto, o Shell passará a exibir as listagens em cores, sempre que for aplicável.\n\n## VIM\n\nPara configurar o VIM, verifique pela existência do arquivo **.vimrc** na sua pasta de usuário.\n\nVerifique pela existência do arquivo **.vimrc**:\n\n\t$ ls -la .vimrc\n\nCaso o arquivo não exista, crie-o:\n\n\t$ touch .vimrc\n\nEdite o arquivo e adicione o conteúdo que segue, ao final do mesmo:\n\n\tsyntax on\n\nPronto, o VIM passará a exibir o conteúdo com highlight de sintaxe, sempre que for aplicável.","tags":["mac-os-x","macos","terminal","vim"],"categories":["blog"]},{"title":"Criando um Pendrive bootavel com Ubuntu no Mac OS X","url":"/blog/2013/07/24/criando-pendrive-bootavel-com-ubuntu-no-mac-os-x/","content":"De posse da imagem ISO e de um Pendrive, basta seguir alguns poucos passos no terminal do Mac, para executar esta simples tarefa, seja para criar um Pendrive bootavel com Ubuntu, outra Distribuição Linux ou até mesmo outro OS qualquer.\n\nPrimeiramente, conecte o **Pendrive** ao **Mac**\n\nAcesse o aplicativo **Terminal.app**, pelo **Spotlight** (⌘ + Tecla Espaço) ou diretamente através do diretório **/Applications/Utilities/**\n\nExecute o comando \"**diskutil list**\", para obter uma lista de discos disponíveis:\n\n\t$diskutil list\n\nO retorno do **diskutil list**, poderá ser semelhante à isto:\n\n\t/dev/disk0\n\t   #:                       TYPE NAME                    SIZE       IDENTIFIER\n\t   0:      GUID_partition_scheme                        *320.1 GB   disk0\n\t   1:                        EFI                         209.7 MB   disk0s1\n\t   2:                  Apple_HFS Macintosh HD            319.2 GB   disk0s2\n\t   3:                 Apple_Boot Recovery HD             650.0 MB   disk0s3\n\t/dev/disk1\n\t   #:                       TYPE NAME                    SIZE       IDENTIFIER\n\t   0:     FDisk_partition_scheme                        *4.0 GB     disk1\n\t   1:                 DOS_FAT_32 SCHMITZ                 4.0 GB     disk1s1\n\nIdentifique o disco relativo ao Pendrive, neste caso, é o **/dev/disk1**\n\nDesmonte o disco, com o comando \"**diskutil unmountDisk**\"\n\n\t$diskutil unmountDisk /dev/disk1\n\nNote, que \"/dev/disk1\" neste caso é o Pendrive/Disco anteriormente identificado através do comando **diskutil list**.\n\nUma vez que o disco esteja desmontado, você poderá acessa-lo e altera-lo à baixo nível.\n\nLocalize a imagem ISO que deseja gravar no Pendrive ou copie-a para um local de fácil \"acesso\".\n\nPara efetuar a cópia, iremos utilizar o utilitário **dd**, o qual já se encontra disponível no Mac OS X.\n\nPara saber mais sobre o **dd**, basta consultar o Manual, digitando \"man dd\" no Terminal.\n\nA sintaxe básica do **dd** é:\n\n\tdd if=origem of=destino\n\n## Partindo para a cópia...\n\nSubstitua **origem** e **destino**, pelo arquivo ISO e pelo disco de destino respectivamente, logo teremos algo semelhante à:\n\n\tdd if=ubuntu-13.04-server-amd64.iso of=/dev/rdisk1 bs=128m\n\nNote que, para acelerar o processo de cópia, complementamos o comando, definindo parâmetro **block size** (bs) como **128m** e alteramos o disco de destino incluindo um \"**r**\" antes de \"**disk1**\".\n\nO **bs** indica que os blocos de leitura e escrita devem possuir o mesmo tamanho, enquanto que o \"**r**\" define que o disco deve ser acessado no modo **raw**.\n\nQuando o processo de cópia for concluído, você receberá uma mensagem informando o tempo decorrido e a quantidade de bytes transferidos.\n\nTudo pronto, agora basta desconectar o Pendrive e utiliza-lo.","tags":["mac-os-x","macos","ubuntu","pendrive"],"categories":["blog"]},{"title":"Instalação limpa do Mountain Lion com Pendrive","url":"/blog/2013/03/25/instalacao-limpa-do-mountain-lion-com-pendrive/","content":"Efetuar uma instalação limpa do OS X, ou clean install, como é comumente conhecida, é uma tarefa relativamente simples.\n\nCom o OS X ainda em funcionamento, efetue o download da Instalação do **OS X Mountain Lion** através da **Mac App Store**.\n\nQuando o download estiver concluído, cancele a instalação e acesse o diretório \"/Applications/\", pelo Finder.\n\nEncontre o item \"Instalação do OS X Mountain Lion\", abra o menu de contexto e selecione a opção: \"Mostrar Conteúdo do Pacote\".\n\nAcesse o diretório \"/Contents/SharedSupport/\" e busque pelo arquivo \"**InstallESD.dmg**\".\n\nConecte um **Disco**, **PenDrive** ou cartão **SD**, de no mínimo **8 GB** ao MAC.\n\nAcesse o \"Utilitário de Disco\" pelo **Spotlight** ou através do diretório \"/Applications/\".\n\nEstando no \"Utilitário de Disco\", selecione o Dispositivo de destino, na lista de Drives e clique sobre a aba \"Restaurar\".\n\nVolte ao Finder e arraste o arquivo \"**InstallESD.dmg**\", para o \"Utilitário de Disco\", sobre o campo \"Fonte:\" da aba \"Restaurar\".\n\nAinda no \"Utilitário de Disco\", ao lado esquerdo, na lista de Drives, arraste o Drive referente ao Dispositivo que você irá utilizar, para o campo \"Destino:\"\n\nEscolha a opção \"Restaurar\" e aguarde a conclusão da criação do \"Disco de Instalação\".\n\n## Partindo para a Instalação\n\nCom o Dispositivo conectado ao MAC, reinicie, ou ligue-o, mantendo a tecla \"Option\" pressionada.\n\nDeverá ser exibida uma \"lista\", na qual você poderá selecionar o Dispositivo com o nome \"MAC OS X\".\n\nNeste ponto você possui duas opções:\n\n*   Efetuar uma Instalação Limpa\n*   Reinstalar o OS X\n\n### Efetuar uma Instalação Limpa:\n\n\tSelecione o \"Utilitário de Disco\" e escolha a opção \"Continuar\".\n\tSelecione o \"Disco Principal\", vá até a aba \"Apagar\" e escolha a opção \"Apagar\".\n\tAguarde e conclusão do processo.\n\tFeche o \"Utilitário de Disco\".\n\tProssiga com uma instalação do zero...\n\n### Reinstalar o OS X:\n\n\tBastará selecionar a opção \"Reinstalar OS X\" e escolher a opção \"Continuar\".\n\nO processo de instalação e reinstalação, é praticamente o mesmo, com a diferença de a reinstalação manter seus arquivos, programas e algumas configuração, ao passo que a instalação limpa, obviamente irá lhe obrigar à reconfigurar e instalar novamente todos os seus programas, serviços, etc...","tags":["mac-os-x","macos","pendrive","app-store","apple"],"categories":["blog"]},{"title":"Gerenciando o Ubuntu pelo browser, com Webmin","url":"/blog/2013/01/11/gerenciando-o-ubuntu-pelo-browser-com-webmin/","content":"Este passo-a-passo, tem como objetivo apresentar uma ferramenta simples e eficaz para gerenciamento de uma distribuição Ubuntu, através de uma interface web.\n\nSem adentrar em detalhes técnicos específicos, esta é uma ótima opção para criar um servidor para um pequeno ambiente de testes e desenvolvimento.\n\nNeste passo-a-passo foi utilizado o **Webmin 1.590**, sobre um **Ubuntu Server 12.04**.\n\nA instalação do **Ubuntu Server** utilizada, é uma instalação padrão, na qual optou-se apenas pela instalação dos pacotes adicionais: _OpenSSH server_, _LAMP server_, _PostgreSQL database_ e _Samba file server_.\n\nCom o **Webmin**, é possível instalar, atualizar e configurar de forma centralizada, intuitiva e amigável, praticamente todos os serviços necessários em um servidor de desenvolvimento básico.\n\n## Instalação do Webmin no Ubuntu Server\n\nPara efetuar a instalação do Webmin através do repositório APT, é necessário primeiramente, adicionar o repositório do Webmin à lista de sources do APT.\n\nPara isto, edita-se o arquivo de sources e adiciona-se as linhas:\n\n\tdeb http://download.webmin.com/download/repository sarge contrib\n\tdeb http://webmin.mirror.somersettechsolutions.co.uk/repository sarge contrib\n\nEstando no terminal, utilize o Vim e siga os passos:\n\n\tsudo vim /etc/apt/sources.list\n\tshift + g\n\to\n\tdeb http://download.webmin.com/download/repository sarge contrib\n\tdeb http://webmin.mirror.somersettechsolutions.co.uk/repository sarge contrib\n\t:wq\n\nApós isto, deve-se proceder com a instalação das chaves\n\nComo por padrão não se utiliza o usuário root no ubuntu, não será possível entrar na pasta **/root**, então execute o comando: **sudo su**\n\nE após isto, execute os seguintes comandos:\n\n\tcd /root\n\twget http://www.webmin.com/jcameron-key.asc\n\tapt-key add jcameron-key.asc\n\nFeito isto, é hora de efetivamente instalar o Webmin através do repositório APT:\n\n\tapt-get update\n\tapt-get install webmin\n\nUma vez tendo executado e concluído a instalação do Webmin, será possível acessa-lo através de **https**, na porta **10000**.\n\nPor exemplo, para um servidor com hostname ubuntu, acessaríamos: https://ubuntu:10000\n\nPara logar, basta utilizar algum usuário que você já possua no Ubuntu.\n\nCom uma interface web simples e de fácil utilização, o ubuntu permite efetuar uma infinidade de tarefas administrativas, sem a necessidade de qualquer software cliente específico, bastando para isto, um simples web browser, que habilita acesso remoto a partir de qualquer lugar.\n\nPara automatizar a instalação, que já é bastante simples por sinal, criei um script bash, que esta no Gist abaixo:\n\nhttps://gist.github.com/3062661#file_instalar_wm.sh\n\nPara efetuar o Download deste Gist, basta acessar a URL: [https://gist.github.com/raw/3062661/a565ff650a3655f9d31c37b72855669214ad10e8/instalar_wm.sh](https://gist.github.com/raw/3062661/a565ff650a3655f9d31c37b72855669214ad10e8/instalar_wm.sh \"Script Bash para Instalar o Webmin\")\nOu então, utilize a versão da URL encurtada: [https://bit.ly/3AIppqx](https://bit.ly/3AIppqx \"Script Bash para Instalar o Webmin\")\n\nVá ao terminal e execute na sequencia abaixo, para efetuar o download e efetuar a instalação:\n\n\twget https://bit.ly/3AIppqx -O instalar_wm.sh\n\tchmod 777 instalar_wm.sh\n\tsudo ./instalar_wm.sh","tags":["ubuntu","webmin"],"categories":["blog"]}]